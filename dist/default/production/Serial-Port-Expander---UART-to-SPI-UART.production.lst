

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 12 22:50:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 06/04/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F46K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   0007D8                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _text1
    72   0007D8  48                 	db	72
    73   0007D9  65                 	db	101
    74   0007DA  6C                 	db	108
    75   0007DB  6C                 	db	108
    76   0007DC  6F                 	db	111
    77   0007DD  2C                 	db	44
    78   0007DE  20                 	db	32
    79   0007DF  57                 	db	87
    80   0007E0  65                 	db	101
    81   0007E1  6C                 	db	108
    82   0007E2  63                 	db	99
    83   0007E3  6F                 	db	111
    84   0007E4  6D                 	db	109
    85   0007E5  65                 	db	101
    86   0007E6  21                 	db	33
    87   0007E7  00                 	db	0
    88                           
    89                           ;initializer for _wii_classic_packet
    90   0007E8  7A                 	db	122
    91   0007E9  31                 	db	49
    92   0007EA  31                 	db	49
    93   0007EB  31                 	db	49
    94   0007EC  31                 	db	49
    95   0007ED  21                 	db	33
    96   0007EE  21                 	db	33
    97   0007EF  21                 	db	33
    98   0007F0  79                 	db	121
    99   0007F1  00                 	db	0
   100                           
   101                           ;initializer for _debouncing_flag
   102   0007F2  01                 	db	1
   103                           
   104                           	psect	idataBANK0
   105   0005E6                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _instructions3
   109   0005E6  50                 	db	80
   110   0005E7  72                 	db	114
   111   0005E8  65                 	db	101
   112   0005E9  73                 	db	115
   113   0005EA  73                 	db	115
   114   0005EB  20                 	db	32
   115   0005EC  27                 	db	39
   116   0005ED  71                 	db	113
   117   0005EE  27                 	db	39
   118   0005EF  20                 	db	32
   119   0005F0  61                 	db	97
   120   0005F1  6E                 	db	110
   121   0005F2  64                 	db	100
   122   0005F3  20                 	db	32
   123   0005F4  27                 	db	39
   124   0005F5  65                 	db	101
   125   0005F6  27                 	db	39
   126   0005F7  20                 	db	32
   127   0005F8  74                 	db	116
   128   0005F9  6F                 	db	111
   129   0005FA  20                 	db	32
   130   0005FB  74                 	db	116
   131   0005FC  75                 	db	117
   132   0005FD  72                 	db	114
   133   0005FE  6E                 	db	110
   134   0005FF  20                 	db	32
   135   000600  6C                 	db	108
   136   000601  69                 	db	105
   137   000602  67                 	db	103
   138   000603  68                 	db	104
   139   000604  74                 	db	116
   140   000605  20                 	db	32
   141   000606  62                 	db	98
   142   000607  65                 	db	101
   143   000608  61                 	db	97
   144   000609  6D                 	db	109
   145   00060A  20                 	db	32
   146   00060B  6F                 	db	111
   147   00060C  66                 	db	102
   148   00060D  66                 	db	102
   149   00060E  20                 	db	32
   150   00060F  61                 	db	97
   151   000610  6E                 	db	110
   152   000611  64                 	db	100
   153   000612  20                 	db	32
   154   000613  6F                 	db	111
   155   000614  6E                 	db	110
   156   000615  00                 	db	0
   157                           
   158                           ;initializer for _instructions2
   159   000616  55                 	db	85
   160   000617  73                 	db	115
   161   000618  65                 	db	101
   162   000619  20                 	db	32
   163   00061A  72                 	db	114
   164   00061B  69                 	db	105
   165   00061C  67                 	db	103
   166   00061D  68                 	db	104
   167   00061E  74                 	db	116
   168   00061F  20                 	db	32
   169   000620  6A                 	db	106
   170   000621  6F                 	db	111
   171   000622  79                 	db	121
   172   000623  73                 	db	115
   173   000624  74                 	db	116
   174   000625  69                 	db	105
   175   000626  63                 	db	99
   176   000627  6B                 	db	107
   177   000628  20                 	db	32
   178   000629  74                 	db	116
   179   00062A  6F                 	db	111
   180   00062B  20                 	db	32
   181   00062C  6D                 	db	109
   182   00062D  6F                 	db	111
   183   00062E  76                 	db	118
   184   00062F  65                 	db	101
   185   000630  20                 	db	32
   186   000631  72                 	db	114
   187   000632  69                 	db	105
   188   000633  67                 	db	103
   189   000634  68                 	db	104
   190   000635  74                 	db	116
   191   000636  20                 	db	32
   192   000637  77                 	db	119
   193   000638  68                 	db	104
   194   000639  65                 	db	101
   195   00063A  65                 	db	101
   196   00063B  6C                 	db	108
   197   00063C  00                 	db	0
   198                           
   199                           ;initializer for _instructions1
   200   00063D  55                 	db	85
   201   00063E  73                 	db	115
   202   00063F  65                 	db	101
   203   000640  20                 	db	32
   204   000641  6C                 	db	108
   205   000642  65                 	db	101
   206   000643  66                 	db	102
   207   000644  74                 	db	116
   208   000645  20                 	db	32
   209   000646  6A                 	db	106
   210   000647  6F                 	db	111
   211   000648  79                 	db	121
   212   000649  73                 	db	115
   213   00064A  74                 	db	116
   214   00064B  69                 	db	105
   215   00064C  63                 	db	99
   216   00064D  6B                 	db	107
   217   00064E  20                 	db	32
   218   00064F  74                 	db	116
   219   000650  6F                 	db	111
   220   000651  20                 	db	32
   221   000652  6D                 	db	109
   222   000653  6F                 	db	111
   223   000654  76                 	db	118
   224   000655  65                 	db	101
   225   000656  20                 	db	32
   226   000657  6C                 	db	108
   227   000658  65                 	db	101
   228   000659  66                 	db	102
   229   00065A  74                 	db	116
   230   00065B  20                 	db	32
   231   00065C  77                 	db	119
   232   00065D  68                 	db	104
   233   00065E  65                 	db	101
   234   00065F  65                 	db	101
   235   000660  6C                 	db	108
   236   000661  00                 	db	0
   237   000000                     _RCREG1	set	4014
   238   000000                     _TXREG1	set	4013
   239   000000                     _RCSTA2bits	set	3953
   240   000000                     _SPBRG1	set	4015
   241   000000                     _BAUDCON1bits	set	4024
   242   000000                     _TRISCbits	set	3988
   243   000000                     _TRISBbits	set	3987
   244   000000                     _TRISD	set	3989
   245                           
   246                           	psect	nvCOMRAM
   247   00004D                     __pnvCOMRAM:
   248                           	callstack 0
   249   00004D                     _rx_str_interrupt:
   250                           	callstack 0
   251   00004D                     	ds	2
   252   000000                     _TRISDbits	set	3989
   253   000000                     _LATAbits	set	3977
   254   000000                     _INTCONbits	set	4082
   255   000000                     _BAUDCON2bits	set	3952
   256   000000                     _TXSTA2bits	set	3954
   257   000000                     _CM2CON0bits	set	3960
   258   000000                     _CM1CON0bits	set	3961
   259   000000                     _ANSELE	set	3900
   260   000000                     _ANSELD	set	3899
   261   000000                     _ANSELC	set	3898
   262   000000                     _ANSELB	set	3897
   263   000000                     _ANSELA	set	3896
   264   000000                     _LATA	set	3977
   265   000000                     _LATD	set	3980
   266   000000                     _TRISAbits	set	3986
   267   000000                     _PIE1bits	set	3997
   268   000000                     _RCSTA1bits	set	4011
   269   000000                     _TXSTA1bits	set	4012
   270   000000                     _ADCON0	set	4034
   271   000000                     _SSP1CON1bits	set	4038
   272   000000                     _SSP1STATbits	set	4039
   273   000000                     _SSP1ADD	set	4040
   274   000000                     _IPEN	set	32391
   275   000000                     _LATBbits	set	3978
   276   000000                     _INTCON	set	4082
   277   000000                     _SSP1BUF	set	4041
   278   000000                     _TXREG2	set	3955
   279   000000                     _SPBRG2	set	3957
   280   000000                     _SPBRGH1	set	4016
   281   000000                     _SPBRGH2	set	3958
   282   000000                     _PIR3bits	set	4004
   283   000000                     _PIR1bits	set	3998
   284                           
   285                           ; #config settings
   286                           
   287                           	psect	cinit
   288   000662                     __pcinit:
   289                           	callstack 0
   290   000662                     start_initialization:
   291                           	callstack 0
   292   000662                     __initialization:
   293                           	callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK0 (124 bytes)
   296                           ; load TBLPTR registers with __pidataBANK0
   297   000662  0EE6               	movlw	low __pidataBANK0
   298   000664  6EF6               	movwf	tblptrl,c
   299   000666  0E05               	movlw	high __pidataBANK0
   300   000668  6EF7               	movwf	tblptrh,c
   301   00066A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   302   00066C  6EF8               	movwf	tblptru,c
   303   00066E  EE00  F060         	lfsr	0,__pdataBANK0
   304   000672  EE10 F07C          	lfsr	1,124
   305   000676                     copy_data0:
   306   000676  0009               	tblrd		*+
   307   000678  CFF5 FFEE          	movff	tablat,postinc0
   308   00067C  50E5               	movf	postdec1,w,c
   309   00067E  50E1               	movf	fsr1l,w,c
   310   000680  E1FA               	bnz	copy_data0
   311                           
   312                           ; Initialize objects allocated to COMRAM (27 bytes)
   313                           ; load TBLPTR registers with __pidataCOMRAM
   314   000682  0ED8               	movlw	low __pidataCOMRAM
   315   000684  6EF6               	movwf	tblptrl,c
   316   000686  0E07               	movlw	high __pidataCOMRAM
   317   000688  6EF7               	movwf	tblptrh,c
   318   00068A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   319   00068C  6EF8               	movwf	tblptru,c
   320   00068E  EE00  F021         	lfsr	0,__pdataCOMRAM
   321   000692  EE10 F01B          	lfsr	1,27
   322   000696                     copy_data1:
   323   000696  0009               	tblrd		*+
   324   000698  CFF5 FFEE          	movff	tablat,postinc0
   325   00069C  50E5               	movf	postdec1,w,c
   326   00069E  50E1               	movf	fsr1l,w,c
   327   0006A0  E1FA               	bnz	copy_data1
   328                           
   329                           ; Clear objects allocated to COMRAM (32 bytes)
   330   0006A2  EE00  F001         	lfsr	0,__pbssCOMRAM
   331   0006A6  0E20               	movlw	32
   332   0006A8                     clear_0:
   333   0006A8  6AEE               	clrf	postinc0,c
   334   0006AA  06E8               	decf	wreg,f,c
   335   0006AC  E1FD               	bnz	clear_0
   336   0006AE                     end_of_initialization:
   337                           	callstack 0
   338   0006AE                     __end_of__initialization:
   339                           	callstack 0
   340   0006AE  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   341   0006B0  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   342   0006B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   343   0006B4  6EF8               	movwf	tblptru,c
   344   0006B6  0100               	movlb	0
   345   0006B8  EF71  F000         	goto	_main	;jump to C main() function
   346                           
   347                           	psect	bssCOMRAM
   348   000001                     __pbssCOMRAM:
   349                           	callstack 0
   350   000001                     _classic_ctrl:
   351                           	callstack 0
   352   000001                     	ds	7
   353   000008                     _aux_buttons:
   354                           	callstack 0
   355   000008                     	ds	6
   356   00000E                     _shoulder_buttons:
   357                           	callstack 0
   358   00000E                     	ds	6
   359   000014                     _arrow_buttons:
   360                           	callstack 0
   361   000014                     	ds	4
   362   000018                     _act_buttons:
   363                           	callstack 0
   364   000018                     	ds	4
   365   00001C                     _recording_on:
   366                           	callstack 0
   367   00001C                     	ds	1
   368   00001D                     _rx_char:
   369                           	callstack 0
   370   00001D                     	ds	1
   371   00001E                     _demuxed_controller_signals:
   372                           	callstack 0
   373   00001E                     	ds	1
   374   00001F                     _debouncing_counter:
   375                           	callstack 0
   376   00001F                     	ds	1
   377   000020                     _servo_controller_tx:
   378                           	callstack 0
   379   000020                     	ds	1
   380                           
   381                           	psect	dataCOMRAM
   382   000021                     __pdataCOMRAM:
   383                           	callstack 0
   384   000021                     _text1:
   385                           	callstack 0
   386   000021                     	ds	16
   387   000031                     _wii_classic_packet:
   388                           	callstack 0
   389   000031                     	ds	10
   390   00003B                     _debouncing_flag:
   391                           	callstack 0
   392   00003B                     	ds	1
   393                           
   394                           	psect	dataBANK0
   395   000060                     __pdataBANK0:
   396                           	callstack 0
   397   000060                     _instructions3:
   398                           	callstack 0
   399   000060                     	ds	48
   400   000090                     _instructions2:
   401                           	callstack 0
   402   000090                     	ds	39
   403   0000B7                     _instructions1:
   404                           	callstack 0
   405   0000B7                     	ds	37
   406                           
   407                           	psect	cstackCOMRAM
   408   00003C                     __pcstackCOMRAM:
   409                           	callstack 0
   410   00003C                     ??_UART_ISR:
   411                           
   412                           ; 1 bytes @ 0x0
   413   00003C                     	ds	6
   414   000042                     ??_high_beams_off:
   415   000042                     ??_high_beams_on:
   416   000042                     spi_data@tx_data:
   417                           	callstack 0
   418   000042                     tx1@data1:
   419                           	callstack 0
   420   000042                     tx2@data2:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x6
   424   000042                     	ds	1
   425   000043                     spi_data@data_read:
   426                           	callstack 0
   427   000043                     uart_wr_str@str:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x7
   431   000043                     	ds	1
   432   000044                     spi_data@device:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x8
   436   000044                     	ds	1
   437   000045                     ??_uart_wr_str:
   438                           
   439                           ; 1 bytes @ 0x9
   440   000045                     	ds	2
   441   000047                     uart_wr_str@port:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xB
   445   000047                     	ds	1
   446   000048                     ??_main:
   447                           
   448                           ; 1 bytes @ 0xC
   449   000048                     	ds	5
   450                           
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 85 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  dummy_spi_tx    1    0        unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;Total ram usage:        5 bytes
   475 ;; Hardware stack levels required when called: 3
   476 ;; This function calls:
   477 ;;		_gpio_init
   478 ;;		_high_beams_off
   479 ;;		_high_beams_on
   480 ;;		_rx1_overrun_detect_reset
   481 ;;		_spi_data
   482 ;;		_spi_master_init
   483 ;;		_tx1
   484 ;;		_tx2
   485 ;;		_uart_init
   486 ;;		_uart_wr_str
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493   0000E2                     __ptext0:
   494                           	callstack 0
   495   0000E2                     _main:
   496                           	callstack 28
   497   0000E2                     
   498                           ;main.c: 87:     uint8_t dummy_spi_tx;;main.c: 88:     rx_str_interrupt = &wii_classic_p
      +                          acket;
   499   0000E2  0E31               	movlw	low _wii_classic_packet
   500   0000E4  6E4D               	movwf	_rx_str_interrupt^0,c
   501   0000E6  0E00               	movlw	high _wii_classic_packet
   502   0000E8  6E4E               	movwf	(_rx_str_interrupt+1)^0,c
   503   0000EA                     
   504                           ;main.c: 89:     IPEN=0;
   505   0000EA  9ED0               	bcf	4048,7,c	;volatile
   506   0000EC                     
   507                           ;main.c: 90:     INTCON=0b00000000;
   508   0000EC  0E00               	movlw	0
   509   0000EE  6EF2               	movwf	242,c	;volatile
   510   0000F0                     
   511                           ;main.c: 91:     gpio_init();
   512   0000F0  EC90  F003         	call	_gpio_init	;wreg free
   513                           
   514                           ;main.c: 92:     spi_master_init();
   515   0000F4  EC78  F003         	call	_spi_master_init	;wreg free
   516                           
   517                           ;main.c: 93:     uart_init();
   518   0000F8  EC5E  F003         	call	_uart_init	;wreg free
   519   0000FC                     
   520                           ;main.c: 95:     INTCONbits.GIE = 1;
   521   0000FC  8EF2               	bsf	242,7,c	;volatile
   522   0000FE                     
   523                           ;main.c: 96:     INTCONbits.PEIE = 1;
   524   0000FE  8CF2               	bsf	242,6,c	;volatile
   525   000100  0E6F               	movlw	111
   526   000102  6E42               	movwf	spi_data@tx_data^0,c
   527   000104  0E03               	movlw	3
   528   000106  EC92  F002         	call	_spi_data
   529   00010A                     
   530                           ;main.c: 99:     uart_wr_str(1, text1);
   531   00010A  0E21               	movlw	low _text1
   532   00010C  6E43               	movwf	uart_wr_str@str^0,c
   533   00010E  0E00               	movlw	high _text1
   534   000110  6E44               	movwf	(uart_wr_str@str+1)^0,c
   535   000112  0E01               	movlw	1
   536   000114  EC31  F002         	call	_uart_wr_str
   537   000118                     
   538                           ;main.c: 100:     tx1('\n');
   539   000118  0E0A               	movlw	10
   540   00011A  ECCF  F003         	call	_tx1
   541   00011E                     
   542                           ;main.c: 101:     tx1('\r');
   543   00011E  0E0D               	movlw	13
   544   000120  ECCF  F003         	call	_tx1
   545   000124                     
   546                           ;main.c: 102:     uart_wr_str(1, instructions1);
   547   000124  0EB7               	movlw	low _instructions1
   548   000126  6E43               	movwf	uart_wr_str@str^0,c
   549   000128  0E00               	movlw	high _instructions1
   550   00012A  6E44               	movwf	(uart_wr_str@str+1)^0,c
   551   00012C  0E01               	movlw	1
   552   00012E  EC31  F002         	call	_uart_wr_str
   553   000132                     
   554                           ;main.c: 103:     tx1('\n');
   555   000132  0E0A               	movlw	10
   556   000134  ECCF  F003         	call	_tx1
   557   000138                     
   558                           ;main.c: 104:     tx1('\r');
   559   000138  0E0D               	movlw	13
   560   00013A  ECCF  F003         	call	_tx1
   561   00013E                     
   562                           ;main.c: 105:     uart_wr_str(1, instructions2);
   563   00013E  0E90               	movlw	low _instructions2
   564   000140  6E43               	movwf	uart_wr_str@str^0,c
   565   000142  0E00               	movlw	high _instructions2
   566   000144  6E44               	movwf	(uart_wr_str@str+1)^0,c
   567   000146  0E01               	movlw	1
   568   000148  EC31  F002         	call	_uart_wr_str
   569   00014C                     
   570                           ;main.c: 106:     tx1('\n');
   571   00014C  0E0A               	movlw	10
   572   00014E  ECCF  F003         	call	_tx1
   573   000152                     
   574                           ;main.c: 107:     tx1('\r');
   575   000152  0E0D               	movlw	13
   576   000154  ECCF  F003         	call	_tx1
   577   000158                     
   578                           ;main.c: 108:     uart_wr_str(1, instructions3);
   579   000158  0E60               	movlw	low _instructions3
   580   00015A  6E43               	movwf	uart_wr_str@str^0,c
   581   00015C  0E00               	movlw	high _instructions3
   582   00015E  6E44               	movwf	(uart_wr_str@str+1)^0,c
   583   000160  0E01               	movlw	1
   584   000162  EC31  F002         	call	_uart_wr_str
   585   000166                     
   586                           ;main.c: 109:     tx1('\n');
   587   000166  0E0A               	movlw	10
   588   000168  ECCF  F003         	call	_tx1
   589   00016C                     
   590                           ;main.c: 110:     tx1('\r');
   591   00016C  0E0D               	movlw	13
   592   00016E  ECCF  F003         	call	_tx1
   593   000172                     l1556:
   594                           
   595                           ;main.c: 113:     {;main.c: 115:         classic_ctrl.lx_joystick = wii_classic_packet[1
      +                          ] - 33;
   596   000172  5032               	movf	(_wii_classic_packet+1)^0,w,c
   597   000174  0FDF               	addlw	223
   598   000176  6E01               	movwf	_classic_ctrl^0,c
   599   000178                     
   600                           ;main.c: 116:         classic_ctrl.ly_joystick = wii_classic_packet[2] - 33;
   601   000178  5033               	movf	(_wii_classic_packet+2)^0,w,c
   602   00017A  0FDF               	addlw	223
   603   00017C  6E02               	movwf	(_classic_ctrl+1)^0,c
   604   00017E                     
   605                           ;main.c: 117:         classic_ctrl.rx_joystick = wii_classic_packet[3] - 33;
   606   00017E  5034               	movf	(_wii_classic_packet+3)^0,w,c
   607   000180  0FDF               	addlw	223
   608   000182  6E03               	movwf	(_classic_ctrl+2)^0,c
   609   000184                     
   610                           ;main.c: 118:         classic_ctrl.ry_joystick = wii_classic_packet[4] - 33;
   611   000184  5035               	movf	(_wii_classic_packet+4)^0,w,c
   612   000186  0FDF               	addlw	223
   613   000188  6E04               	movwf	(_classic_ctrl+3)^0,c
   614   00018A                     
   615                           ;main.c: 119:         classic_ctrl.d_pad = wii_classic_packet[5] - 33;
   616   00018A  5036               	movf	(_wii_classic_packet+5)^0,w,c
   617   00018C  0FDF               	addlw	223
   618   00018E  6E05               	movwf	(_classic_ctrl+4)^0,c
   619   000190                     
   620                           ;main.c: 120:         classic_ctrl.action_buttons = wii_classic_packet[6] - 33;
   621   000190  5037               	movf	(_wii_classic_packet+6)^0,w,c
   622   000192  0FDF               	addlw	223
   623   000194  6E06               	movwf	(_classic_ctrl+5)^0,c
   624   000196                     
   625                           ;main.c: 121:         classic_ctrl.shoulder_plus_minus = wii_classic_packet[7] - 33;
   626   000196  5038               	movf	(_wii_classic_packet+7)^0,w,c
   627   000198  0FDF               	addlw	223
   628   00019A  6E07               	movwf	(_classic_ctrl+6)^0,c
   629                           
   630                           ;main.c: 122:         wii_classic_packet[8] = '\0';
   631   00019C  0E00               	movlw	0
   632   00019E  6E39               	movwf	(_wii_classic_packet+8)^0,c
   633   0001A0                     
   634                           ;main.c: 123:         uart_wr_str(1,wii_classic_packet);
   635   0001A0  0E31               	movlw	low _wii_classic_packet
   636   0001A2  6E43               	movwf	uart_wr_str@str^0,c
   637   0001A4  0E00               	movlw	high _wii_classic_packet
   638   0001A6  6E44               	movwf	(uart_wr_str@str+1)^0,c
   639   0001A8  0E01               	movlw	1
   640   0001AA  EC31  F002         	call	_uart_wr_str
   641   0001AE                     
   642                           ;main.c: 124:         tx1('\r');
   643   0001AE  0E0D               	movlw	13
   644   0001B0  ECCF  F003         	call	_tx1
   645   0001B4  0E7A               	movlw	122
   646   0001B6  6E42               	movwf	spi_data@tx_data^0,c
   647   0001B8  0E03               	movlw	3
   648   0001BA  EC92  F002         	call	_spi_data
   649   0001BE  0E7A               	movlw	122
   650   0001C0  6E42               	movwf	spi_data@tx_data^0,c
   651   0001C2  0E00               	movlw	0
   652   0001C4  EC92  F002         	call	_spi_data
   653   0001C8  C001  F042         	movff	_classic_ctrl,spi_data@tx_data
   654   0001CC  0E03               	movlw	3
   655   0001CE  EC92  F002         	call	_spi_data
   656   0001D2  C001  F042         	movff	_classic_ctrl,spi_data@tx_data
   657   0001D6  0E00               	movlw	0
   658   0001D8  EC92  F002         	call	_spi_data
   659   0001DC  C002  F042         	movff	_classic_ctrl+1,spi_data@tx_data
   660   0001E0  0E03               	movlw	3
   661   0001E2  EC92  F002         	call	_spi_data
   662   0001E6  C002  F042         	movff	_classic_ctrl+1,spi_data@tx_data
   663   0001EA  0E00               	movlw	0
   664   0001EC  EC92  F002         	call	_spi_data
   665   0001F0  C003  F042         	movff	_classic_ctrl+2,spi_data@tx_data
   666   0001F4  0E03               	movlw	3
   667   0001F6  EC92  F002         	call	_spi_data
   668   0001FA  C003  F042         	movff	_classic_ctrl+2,spi_data@tx_data
   669   0001FE  0E00               	movlw	0
   670   000200  EC92  F002         	call	_spi_data
   671   000204  C004  F042         	movff	_classic_ctrl+3,spi_data@tx_data
   672   000208  0E03               	movlw	3
   673   00020A  EC92  F002         	call	_spi_data
   674   00020E  C004  F042         	movff	_classic_ctrl+3,spi_data@tx_data
   675   000212  0E00               	movlw	0
   676   000214  EC92  F002         	call	_spi_data
   677   000218  0E79               	movlw	121
   678   00021A  6E42               	movwf	spi_data@tx_data^0,c
   679   00021C  0E03               	movlw	3
   680   00021E  EC92  F002         	call	_spi_data
   681   000222  0E79               	movlw	121
   682   000224  6E42               	movwf	spi_data@tx_data^0,c
   683   000226  0E00               	movlw	0
   684   000228  EC92  F002         	call	_spi_data
   685   00022C                     
   686                           ;main.c: 142:         act_buttons.a = ((classic_ctrl.action_buttons & 0b00001000) >> 3);
   687   00022C  3806               	swapf	(_classic_ctrl+5)^0,w,c
   688   00022E  46E8               	rlncf	wreg,f,c
   689   000230  0B1F               	andlw	31
   690   000232  0B01               	andlw	1
   691   000234  6E18               	movwf	_act_buttons^0,c
   692   000236                     
   693                           ;main.c: 143:         act_buttons.b = ((classic_ctrl.action_buttons & 0b00000100) >> 2);
   694   000236  4006               	rrncf	(_classic_ctrl+5)^0,w,c
   695   000238  42E8               	rrncf	wreg,f,c
   696   00023A  0B3F               	andlw	63
   697   00023C  0B01               	andlw	1
   698   00023E  6E19               	movwf	(_act_buttons+1)^0,c
   699   000240                     
   700                           ;main.c: 144:         act_buttons.x = ((classic_ctrl.action_buttons & 0b00000010) >> 1);
   701   000240  90D8               	bcf	status,0,c
   702   000242  3006               	rrcf	(_classic_ctrl+5)^0,w,c
   703   000244  0B01               	andlw	1
   704   000246  6E1A               	movwf	(_act_buttons+2)^0,c
   705   000248                     
   706                           ;main.c: 145:         act_buttons.y = ((classic_ctrl.action_buttons & 0b00000001) >> 0);
   707   000248  5006               	movf	(_classic_ctrl+5)^0,w,c
   708   00024A  0B01               	andlw	1
   709   00024C  6E1B               	movwf	(_act_buttons+3)^0,c
   710   00024E                     
   711                           ;main.c: 148:         arrow_buttons.up = ((classic_ctrl.d_pad & 0b00001000) >> 3);
   712   00024E  3805               	swapf	(_classic_ctrl+4)^0,w,c
   713   000250  46E8               	rlncf	wreg,f,c
   714   000252  0B1F               	andlw	31
   715   000254  0B01               	andlw	1
   716   000256  6E14               	movwf	_arrow_buttons^0,c
   717   000258                     
   718                           ;main.c: 149:         arrow_buttons.down = ((classic_ctrl.d_pad & 0b00000100) >> 2);
   719   000258  4005               	rrncf	(_classic_ctrl+4)^0,w,c
   720   00025A  42E8               	rrncf	wreg,f,c
   721   00025C  0B3F               	andlw	63
   722   00025E  0B01               	andlw	1
   723   000260  6E15               	movwf	(_arrow_buttons+1)^0,c
   724   000262                     
   725                           ;main.c: 150:         arrow_buttons.left = ((classic_ctrl.d_pad & 0b00000010) >> 1);
   726   000262  90D8               	bcf	status,0,c
   727   000264  3005               	rrcf	(_classic_ctrl+4)^0,w,c
   728   000266  0B01               	andlw	1
   729   000268  6E16               	movwf	(_arrow_buttons+2)^0,c
   730   00026A                     
   731                           ;main.c: 151:         arrow_buttons.right = ((classic_ctrl.d_pad & 0b00000001) >> 0);
   732   00026A  5005               	movf	(_classic_ctrl+4)^0,w,c
   733   00026C  0B01               	andlw	1
   734   00026E  6E17               	movwf	(_arrow_buttons+3)^0,c
   735   000270                     
   736                           ;main.c: 154:         shoulder_buttons.zl = ((classic_ctrl.shoulder_plus_minus & 0b00100
      +                          000) >> 5);
   737   000270  3807               	swapf	(_classic_ctrl+6)^0,w,c
   738   000272  42E8               	rrncf	wreg,f,c
   739   000274  0B07               	andlw	7
   740   000276  0B01               	andlw	1
   741   000278  6E0E               	movwf	_shoulder_buttons^0,c
   742   00027A                     
   743                           ;main.c: 155:         shoulder_buttons.zr = ((classic_ctrl.shoulder_plus_minus & 0b00010
      +                          000) >> 4);
   744   00027A  3807               	swapf	(_classic_ctrl+6)^0,w,c
   745   00027C  0B0F               	andlw	15
   746   00027E  0B01               	andlw	1
   747   000280  6E0F               	movwf	(_shoulder_buttons+1)^0,c
   748   000282                     
   749                           ;main.c: 156:         shoulder_buttons.lt = ((classic_ctrl.shoulder_plus_minus & 0b00001
      +                          000) >> 3);
   750   000282  3807               	swapf	(_classic_ctrl+6)^0,w,c
   751   000284  46E8               	rlncf	wreg,f,c
   752   000286  0B1F               	andlw	31
   753   000288  0B01               	andlw	1
   754   00028A  6E10               	movwf	(_shoulder_buttons+2)^0,c
   755   00028C                     
   756                           ;main.c: 157:         shoulder_buttons.rt = ((classic_ctrl.shoulder_plus_minus & 0b00000
      +                          100) >> 2);
   757   00028C  4007               	rrncf	(_classic_ctrl+6)^0,w,c
   758   00028E  42E8               	rrncf	wreg,f,c
   759   000290  0B3F               	andlw	63
   760   000292  0B01               	andlw	1
   761   000294  6E11               	movwf	(_shoulder_buttons+3)^0,c
   762   000296                     
   763                           ;main.c: 160:         aux_buttons.minus = ((classic_ctrl.shoulder_plus_minus & 0b0000001
      +                          0) >> 1);
   764   000296  90D8               	bcf	status,0,c
   765   000298  3007               	rrcf	(_classic_ctrl+6)^0,w,c
   766   00029A  0B01               	andlw	1
   767   00029C  6E0C               	movwf	(_aux_buttons+4)^0,c
   768   00029E                     
   769                           ;main.c: 161:         aux_buttons.plus = ((classic_ctrl.shoulder_plus_minus & 0b00000001
      +                          ) >> 0);
   770   00029E  5007               	movf	(_classic_ctrl+6)^0,w,c
   771   0002A0  0B01               	andlw	1
   772   0002A2  6E0D               	movwf	(_aux_buttons+5)^0,c
   773   0002A4                     
   774                           ;main.c: 168:         debouncing_counter++;
   775   0002A4  2A1F               	incf	_debouncing_counter^0,f,c
   776   0002A6                     
   777                           ;main.c: 169:         if(debouncing_counter == 0x00)
   778   0002A6  501F               	movf	_debouncing_counter^0,w,c
   779   0002A8  A4D8               	btfss	status,2,c
   780   0002AA  EF59  F001         	goto	u441
   781   0002AE  EF5B  F001         	goto	u440
   782   0002B2                     u441:
   783   0002B2  EF5F  F001         	goto	l1632
   784   0002B6                     u440:
   785   0002B6                     
   786                           ;main.c: 170:         {;main.c: 171:             debouncing_flag = (0x03 << 6);
   787   0002B6  0EC0               	movlw	192
   788   0002B8  6E3B               	movwf	_debouncing_flag^0,c
   789                           
   790                           ;main.c: 172:         }
   791   0002BA  EF6B  F001         	goto	l1638
   792   0002BE                     l1632:
   793                           
   794                           ;main.c: 174:         {;main.c: 175:             debouncing_flag = 0x00;
   795   0002BE  0E00               	movlw	0
   796   0002C0  6E3B               	movwf	_debouncing_flag^0,c
   797   0002C2                     
   798                           ;main.c: 176:             if(debouncing_counter == 0x5F)
   799   0002C2  0E5F               	movlw	95
   800   0002C4  181F               	xorwf	_debouncing_counter^0,w,c
   801   0002C6  A4D8               	btfss	status,2,c
   802   0002C8  EF68  F001         	goto	u451
   803   0002CC  EF6A  F001         	goto	u450
   804   0002D0                     u451:
   805   0002D0  EF6B  F001         	goto	l1638
   806   0002D4                     u450:
   807   0002D4                     
   808                           ;main.c: 177:             {;main.c: 178:                 debouncing_counter = 0xFF;
   809   0002D4  681F               	setf	_debouncing_counter^0,c
   810   0002D6                     l1638:
   811                           
   812                           ;main.c: 182:         demuxed_controller_signals = (shoulder_buttons.zl << 7) | (shoulde
      +                          r_buttons.zr << 6) | (act_buttons.a << 5) | (act_buttons.b << 4) | (classic_ctrl.d_pad);
   813   0002D6  C019  F048         	movff	_act_buttons+1,??_main
   814   0002DA  3A48               	swapf	??_main^0,f,c
   815   0002DC  0EF0               	movlw	240
   816   0002DE  1648               	andwf	??_main^0,f,c
   817   0002E0  C018  F049         	movff	_act_buttons,??_main+1
   818   0002E4  0E05               	movlw	5
   819   0002E6  6E4A               	movwf	(??_main+2)^0,c
   820   0002E8                     u465:
   821   0002E8  90D8               	bcf	status,0,c
   822   0002EA  3649               	rlcf	(??_main+1)^0,f,c
   823   0002EC  2E4A               	decfsz	(??_main+2)^0,f,c
   824   0002EE  EF74  F001         	goto	u465
   825   0002F2  C00F  F04B         	movff	_shoulder_buttons+1,??_main+3
   826   0002F6  0E06               	movlw	6
   827   0002F8  6E4C               	movwf	(??_main+4)^0,c
   828   0002FA                     u475:
   829   0002FA  90D8               	bcf	status,0,c
   830   0002FC  364B               	rlcf	(??_main+3)^0,f,c
   831   0002FE  2E4C               	decfsz	(??_main+4)^0,f,c
   832   000300  EF7D  F001         	goto	u475
   833   000304  400E               	rrncf	_shoulder_buttons^0,w,c
   834   000306  0B80               	andlw	128
   835   000308  104B               	iorwf	(??_main+3)^0,w,c
   836   00030A  1049               	iorwf	(??_main+1)^0,w,c
   837   00030C  1048               	iorwf	??_main^0,w,c
   838   00030E  1005               	iorwf	(_classic_ctrl+4)^0,w,c
   839   000310  6E1E               	movwf	_demuxed_controller_signals^0,c
   840                           
   841                           ;main.c: 183:         switch(demuxed_controller_signals)
   842   000312  EFBB  F001         	goto	l1660
   843   000316                     l111:
   844                           
   845                           ;main.c: 186:                 servo_controller_tx = 0x00 | debouncing_flag;
   846   000316  C03B  F020         	movff	_debouncing_flag,_servo_controller_tx
   847                           
   848                           ;main.c: 187:                 break;
   849   00031A  EFEC  F001         	goto	l1662
   850   00031E                     l1640:
   851                           
   852                           ;main.c: 189:                 servo_controller_tx = 0x01 | debouncing_flag;
   853   00031E  503B               	movf	_debouncing_flag^0,w,c
   854   000320  0901               	iorlw	1
   855   000322  6E20               	movwf	_servo_controller_tx^0,c
   856                           
   857                           ;main.c: 190:                 break;
   858   000324  EFEC  F001         	goto	l1662
   859   000328                     l1642:
   860                           
   861                           ;main.c: 192:                 servo_controller_tx = 0x02 | debouncing_flag;
   862   000328  503B               	movf	_debouncing_flag^0,w,c
   863   00032A  0902               	iorlw	2
   864   00032C  6E20               	movwf	_servo_controller_tx^0,c
   865                           
   866                           ;main.c: 193:                 break;
   867   00032E  EFEC  F001         	goto	l1662
   868   000332                     l1644:
   869                           
   870                           ;main.c: 195:                 servo_controller_tx = 0x03 | debouncing_flag;
   871   000332  503B               	movf	_debouncing_flag^0,w,c
   872   000334  0903               	iorlw	3
   873   000336  6E20               	movwf	_servo_controller_tx^0,c
   874                           
   875                           ;main.c: 196:                 break;
   876   000338  EFEC  F001         	goto	l1662
   877   00033C                     l1646:
   878                           
   879                           ;main.c: 198:                 servo_controller_tx = 0x04 | debouncing_flag;
   880   00033C  503B               	movf	_debouncing_flag^0,w,c
   881   00033E  0904               	iorlw	4
   882   000340  6E20               	movwf	_servo_controller_tx^0,c
   883                           
   884                           ;main.c: 199:                 break;
   885   000342  EFEC  F001         	goto	l1662
   886   000346                     l1648:
   887                           
   888                           ;main.c: 201:                 servo_controller_tx = 0x05 | debouncing_flag;
   889   000346  503B               	movf	_debouncing_flag^0,w,c
   890   000348  0905               	iorlw	5
   891   00034A  6E20               	movwf	_servo_controller_tx^0,c
   892                           
   893                           ;main.c: 202:                 break;
   894   00034C  EFEC  F001         	goto	l1662
   895   000350                     l1650:
   896                           
   897                           ;main.c: 204:                 servo_controller_tx = 0x06 | debouncing_flag;
   898   000350  503B               	movf	_debouncing_flag^0,w,c
   899   000352  0906               	iorlw	6
   900   000354  6E20               	movwf	_servo_controller_tx^0,c
   901                           
   902                           ;main.c: 205:                 break;
   903   000356  EFEC  F001         	goto	l1662
   904   00035A                     l1652:
   905                           
   906                           ;main.c: 207:                 servo_controller_tx = 0x07 | debouncing_flag;
   907   00035A  503B               	movf	_debouncing_flag^0,w,c
   908   00035C  0907               	iorlw	7
   909   00035E  6E20               	movwf	_servo_controller_tx^0,c
   910                           
   911                           ;main.c: 208:                 break;
   912   000360  EFEC  F001         	goto	l1662
   913   000364                     l1654:
   914                           
   915                           ;main.c: 210:                 servo_controller_tx = 0x08 | debouncing_flag;
   916   000364  503B               	movf	_debouncing_flag^0,w,c
   917   000366  0908               	iorlw	8
   918   000368  6E20               	movwf	_servo_controller_tx^0,c
   919                           
   920                           ;main.c: 211:                 break;
   921   00036A  EFEC  F001         	goto	l1662
   922   00036E                     l1656:
   923                           
   924                           ;main.c: 213:                 servo_controller_tx = 0x00;
   925   00036E  0E00               	movlw	0
   926   000370  6E20               	movwf	_servo_controller_tx^0,c
   927                           
   928                           ;main.c: 214:                 break;
   929   000372  EFEC  F001         	goto	l1662
   930   000376                     l1660:
   931   000376  501E               	movf	_demuxed_controller_signals^0,w,c
   932   000378  6E48               	movwf	??_main^0,c
   933   00037A  6A49               	clrf	(??_main+1)^0,c
   934                           
   935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   936                           ; Switch size 1, requested type "simple"
   937                           ; Number of cases is 1, Range of values is 0 to 0
   938                           ; switch strategies available:
   939                           ; Name         Instructions Cycles
   940                           ; simple_byte            4     3 (average)
   941                           ;	Chosen strategy is simple_byte
   942   00037C  5049               	movf	(??_main+1)^0,w,c
   943   00037E  0A00               	xorlw	0	; case 0
   944   000380  B4D8               	btfsc	status,2,c
   945   000382  EFC5  F001         	goto	l1770
   946   000386  EFB7  F001         	goto	l1656
   947   00038A                     l1770:
   948                           
   949                           ; Switch size 1, requested type "simple"
   950                           ; Number of cases is 9, Range of values is 0 to 128
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte           28    15 (average)
   954                           ;	Chosen strategy is simple_byte
   955   00038A  5048               	movf	??_main^0,w,c
   956   00038C  0A00               	xorlw	0	; case 0
   957   00038E  B4D8               	btfsc	status,2,c
   958   000390  EF8B  F001         	goto	l111
   959   000394  0A01               	xorlw	1	; case 1
   960   000396  B4D8               	btfsc	status,2,c
   961   000398  EF8F  F001         	goto	l1640
   962   00039C  0A03               	xorlw	3	; case 2
   963   00039E  B4D8               	btfsc	status,2,c
   964   0003A0  EF94  F001         	goto	l1642
   965   0003A4  0A06               	xorlw	6	; case 4
   966   0003A6  B4D8               	btfsc	status,2,c
   967   0003A8  EF99  F001         	goto	l1644
   968   0003AC  0A0C               	xorlw	12	; case 8
   969   0003AE  B4D8               	btfsc	status,2,c
   970   0003B0  EF9E  F001         	goto	l1646
   971   0003B4  0A18               	xorlw	24	; case 16
   972   0003B6  B4D8               	btfsc	status,2,c
   973   0003B8  EFA3  F001         	goto	l1648
   974   0003BC  0A30               	xorlw	48	; case 32
   975   0003BE  B4D8               	btfsc	status,2,c
   976   0003C0  EFA8  F001         	goto	l1650
   977   0003C4  0A60               	xorlw	96	; case 64
   978   0003C6  B4D8               	btfsc	status,2,c
   979   0003C8  EFAD  F001         	goto	l1652
   980   0003CC  0AC0               	xorlw	192	; case 128
   981   0003CE  B4D8               	btfsc	status,2,c
   982   0003D0  EFB2  F001         	goto	l1654
   983   0003D4  EFB7  F001         	goto	l1656
   984   0003D8                     l1662:
   985                           
   986                           ;main.c: 216:         tx2(servo_controller_tx);
   987   0003D8  5020               	movf	_servo_controller_tx^0,w,c
   988   0003DA  ECFA  F003         	call	_tx2
   989   0003DE                     
   990                           ;main.c: 220:         LATAbits.LATA0 = act_buttons.a;
   991   0003DE  B018               	btfsc	_act_buttons^0,0,c
   992   0003E0  D002               	bra	u485
   993   0003E2  9089               	bcf	137,0,c	;volatile
   994   0003E4  D001               	bra	u486
   995   0003E6                     u485:
   996   0003E6  8089               	bsf	137,0,c	;volatile
   997   0003E8                     u486:
   998   0003E8                     
   999                           ;main.c: 221:         LATAbits.LATA1 = act_buttons.b;
  1000   0003E8  B019               	btfsc	(_act_buttons+1)^0,0,c
  1001   0003EA  D002               	bra	u495
  1002   0003EC  9289               	bcf	137,1,c	;volatile
  1003   0003EE  D001               	bra	u496
  1004   0003F0                     u495:
  1005   0003F0  8289               	bsf	137,1,c	;volatile
  1006   0003F2                     u496:
  1007   0003F2                     
  1008                           ;main.c: 222:         if((act_buttons.x) & (!act_buttons.y))
  1009   0003F2  501B               	movf	(_act_buttons+3)^0,w,c
  1010   0003F4  B4D8               	btfsc	status,2,c
  1011   0003F6  EFFF  F001         	goto	u501
  1012   0003FA  EF02  F002         	goto	u500
  1013   0003FE                     u501:
  1014   0003FE  0E01               	movlw	1
  1015   000400  EF03  F002         	goto	u510
  1016   000404                     u500:
  1017   000404  0E00               	movlw	0
  1018   000406                     u510:
  1019   000406  141A               	andwf	(_act_buttons+2)^0,w,c
  1020   000408  0900               	iorlw	0
  1021   00040A  B4D8               	btfsc	status,2,c
  1022   00040C  EF0A  F002         	goto	u521
  1023   000410  EF0C  F002         	goto	u520
  1024   000414                     u521:
  1025   000414  EF10  F002         	goto	l1672
  1026   000418                     u520:
  1027   000418                     
  1028                           ;main.c: 223:         {;main.c: 224:             high_beams_on();
  1029   000418  ECA7  F003         	call	_high_beams_on	;wreg free
  1030                           
  1031                           ;main.c: 225:         }
  1032   00041C  EF2B  F002         	goto	l1676
  1033   000420                     l1672:
  1034   000420  501A               	movf	(_act_buttons+2)^0,w,c
  1035   000422  B4D8               	btfsc	status,2,c
  1036   000424  EF16  F002         	goto	u531
  1037   000428  EF19  F002         	goto	u530
  1038   00042C                     u531:
  1039   00042C  0E01               	movlw	1
  1040   00042E  EF1A  F002         	goto	u540
  1041   000432                     u530:
  1042   000432  0E00               	movlw	0
  1043   000434                     u540:
  1044   000434  6E48               	movwf	??_main^0,c
  1045   000436  6A49               	clrf	(??_main+1)^0,c
  1046   000438  501B               	movf	(_act_buttons+3)^0,w,c
  1047   00043A  1648               	andwf	??_main^0,f,c
  1048   00043C  0E00               	movlw	0
  1049   00043E  1649               	andwf	(??_main+1)^0,f,c
  1050   000440  5048               	movf	??_main^0,w,c
  1051   000442  1049               	iorwf	(??_main+1)^0,w,c
  1052   000444  B4D8               	btfsc	status,2,c
  1053   000446  EF27  F002         	goto	u551
  1054   00044A  EF29  F002         	goto	u550
  1055   00044E                     u551:
  1056   00044E  EF2B  F002         	goto	l1676
  1057   000452                     u550:
  1058   000452                     
  1059                           ;main.c: 227:         {;main.c: 228:             high_beams_off();
  1060   000452  ECBB  F003         	call	_high_beams_off	;wreg free
  1061   000456                     l1676:
  1062                           
  1063                           ;main.c: 236:       rx1_overrun_detect_reset();
  1064   000456  ECDE  F003         	call	_rx1_overrun_detect_reset	;wreg free
  1065   00045A  EFB9  F000         	goto	l1556
  1066   00045E  EF6F  F000         	goto	start
  1067   000462                     __end_of_main:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _uart_wr_str *****************
  1071 ;; Defined at:
  1072 ;;		line 70 in file "uart.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  port            1    wreg     unsigned char 
  1075 ;;  str             2    7[COMRAM] PTR unsigned char 
  1076 ;;		 -> instructions3(48), instructions2(39), instructions1(37), text1(16), 
  1077 ;;		 -> wii_classic_packet(10), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  port            1   11[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 2
  1096 ;; This function calls:
  1097 ;;		_tx1
  1098 ;;		_tx2
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text1
  1105   000462                     __ptext1:
  1106                           	callstack 0
  1107   000462                     _uart_wr_str:
  1108                           	callstack 28
  1109                           
  1110                           ;incstack = 0
  1111                           ;uart_wr_str@port stored from wreg
  1112   000462  6E47               	movwf	uart_wr_str@port^0,c
  1113   000464                     
  1114                           ;uart.c: 70: void uart_wr_str(uint8_t port, uint8_t *str);uart.c: 71: {;uart.c: 72:     
      +                          switch(port)
  1115   000464  EF79  F002         	goto	l1502
  1116   000468                     l1482:
  1117                           
  1118                           ;uart.c: 76:             {;uart.c: 77:                 tx1(*str++);
  1119   000468  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1120   00046C  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1121   000470  50DF               	movf	indf2,w,c
  1122   000472  ECCF  F003         	call	_tx1
  1123   000476  4A43               	infsnz	uart_wr_str@str^0,f,c
  1124   000478  2A44               	incf	(uart_wr_str@str+1)^0,f,c
  1125   00047A                     l1486:
  1126                           
  1127                           ;uart.c: 75:             while(*str != '\0')
  1128   00047A  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1129   00047E  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1130   000482  50DF               	movf	indf2,w,c
  1131   000484  A4D8               	btfss	status,2,c
  1132   000486  EF47  F002         	goto	u401
  1133   00048A  EF49  F002         	goto	u400
  1134   00048E                     u401:
  1135   00048E  EF34  F002         	goto	l1482
  1136   000492                     u400:
  1137   000492  EF8E  F002         	goto	l1504
  1138   000496                     l1488:
  1139                           
  1140                           ;uart.c: 82:             {;uart.c: 83:                 tx2(*str++);
  1141   000496  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1142   00049A  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1143   00049E  50DF               	movf	indf2,w,c
  1144   0004A0  ECFA  F003         	call	_tx2
  1145   0004A4  4A43               	infsnz	uart_wr_str@str^0,f,c
  1146   0004A6  2A44               	incf	(uart_wr_str@str+1)^0,f,c
  1147   0004A8                     l1492:
  1148                           
  1149                           ;uart.c: 81:             while(*str != '\0')
  1150   0004A8  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1151   0004AC  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1152   0004B0  50DF               	movf	indf2,w,c
  1153   0004B2  A4D8               	btfss	status,2,c
  1154   0004B4  EF5E  F002         	goto	u411
  1155   0004B8  EF60  F002         	goto	u410
  1156   0004BC                     u411:
  1157   0004BC  EF4B  F002         	goto	l1488
  1158   0004C0                     u410:
  1159   0004C0  EF8E  F002         	goto	l1504
  1160   0004C4                     l1494:
  1161                           
  1162                           ;uart.c: 88:             {;uart.c: 89:                 tx1(*str++);
  1163   0004C4  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1164   0004C8  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1165   0004CC  50DF               	movf	indf2,w,c
  1166   0004CE  ECCF  F003         	call	_tx1
  1167   0004D2  4A43               	infsnz	uart_wr_str@str^0,f,c
  1168   0004D4  2A44               	incf	(uart_wr_str@str+1)^0,f,c
  1169   0004D6                     l1498:
  1170                           
  1171                           ;uart.c: 87:             while(*str != '\0')
  1172   0004D6  C043  FFD9         	movff	uart_wr_str@str,fsr2l
  1173   0004DA  C044  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1174   0004DE  50DF               	movf	indf2,w,c
  1175   0004E0  A4D8               	btfss	status,2,c
  1176   0004E2  EF75  F002         	goto	u421
  1177   0004E6  EF77  F002         	goto	u420
  1178   0004EA                     u421:
  1179   0004EA  EF62  F002         	goto	l1494
  1180   0004EE                     u420:
  1181   0004EE  EF8E  F002         	goto	l1504
  1182   0004F2                     l1502:
  1183   0004F2  5047               	movf	uart_wr_str@port^0,w,c
  1184   0004F4  6E45               	movwf	??_uart_wr_str^0,c
  1185   0004F6  6A46               	clrf	(??_uart_wr_str+1)^0,c
  1186                           
  1187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1188                           ; Switch size 1, requested type "simple"
  1189                           ; Number of cases is 1, Range of values is 0 to 0
  1190                           ; switch strategies available:
  1191                           ; Name         Instructions Cycles
  1192                           ; simple_byte            4     3 (average)
  1193                           ;	Chosen strategy is simple_byte
  1194   0004F8  5046               	movf	(??_uart_wr_str+1)^0,w,c
  1195   0004FA  0A00               	xorlw	0	; case 0
  1196   0004FC  B4D8               	btfsc	status,2,c
  1197   0004FE  EF83  F002         	goto	l1772
  1198   000502  EF6B  F002         	goto	l1498
  1199   000506                     l1772:
  1200                           
  1201                           ; Switch size 1, requested type "simple"
  1202                           ; Number of cases is 2, Range of values is 1 to 2
  1203                           ; switch strategies available:
  1204                           ; Name         Instructions Cycles
  1205                           ; simple_byte            7     4 (average)
  1206                           ;	Chosen strategy is simple_byte
  1207   000506  5045               	movf	??_uart_wr_str^0,w,c
  1208   000508  0A01               	xorlw	1	; case 1
  1209   00050A  B4D8               	btfsc	status,2,c
  1210   00050C  EF3D  F002         	goto	l1486
  1211   000510  0A03               	xorlw	3	; case 2
  1212   000512  B4D8               	btfsc	status,2,c
  1213   000514  EF54  F002         	goto	l1492
  1214   000518  EF6B  F002         	goto	l1498
  1215   00051C                     l1504:
  1216                           
  1217                           ;uart.c: 93:             tx1('\0');
  1218   00051C  0E00               	movlw	0
  1219   00051E  ECCF  F003         	call	_tx1
  1220   000522  0012               	return		;funcret
  1221   000524                     __end_of_uart_wr_str:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _tx2 *****************
  1225 ;; Defined at:
  1226 ;;		line 60 in file "uart.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  data2           1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  data2           1    6[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        1 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;;		_uart_wr_str
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text2
  1256   0007F4                     __ptext2:
  1257                           	callstack 0
  1258   0007F4                     _tx2:
  1259                           	callstack 28
  1260                           
  1261                           ;incstack = 0
  1262                           ;tx2@data2 stored from wreg
  1263   0007F4  6E42               	movwf	tx2@data2^0,c
  1264   0007F6                     l227:
  1265   0007F6  A8A4               	btfss	164,4,c	;volatile
  1266   0007F8  EF00  F004         	goto	u311
  1267   0007FC  EF02  F004         	goto	u310
  1268   000800                     u311:
  1269   000800  EFFB  F003         	goto	l227
  1270   000804                     u310:
  1271   000804                     
  1272                           ;uart.c: 63:     TXREG2=data2;
  1273   000804  C042  FF73         	movff	tx2@data2,3955	;volatile
  1274   000808  0012               	return		;funcret
  1275   00080A                     __end_of_tx2:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _tx1 *****************
  1279 ;; Defined at:
  1280 ;;		line 52 in file "uart.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  data1           1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  data1           1    6[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;;		_uart_wr_str
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310   00079E                     __ptext3:
  1311                           	callstack 0
  1312   00079E                     _tx1:
  1313                           	callstack 28
  1314                           
  1315                           ;incstack = 0
  1316                           ;tx1@data1 stored from wreg
  1317   00079E  6E42               	movwf	tx1@data1^0,c
  1318   0007A0                     l221:
  1319   0007A0  A89E               	btfss	158,4,c	;volatile
  1320   0007A2  EFD5  F003         	goto	u301
  1321   0007A6  EFD7  F003         	goto	u300
  1322   0007AA                     u301:
  1323   0007AA  EFD0  F003         	goto	l221
  1324   0007AE                     u300:
  1325   0007AE                     
  1326                           ;uart.c: 55:     TXREG1=data1;
  1327   0007AE  C042  FFAD         	movff	tx1@data1,4013	;volatile
  1328   0007B2                     
  1329                           ;uart.c: 56:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  1330   0007B2  0E05               	movlw	5
  1331   0007B4                     u597:
  1332   0007B4  2EE8               	decfsz	wreg,f,c
  1333   0007B6  D7FE               	bra	u597
  1334   0007B8  F000               	nop	
  1335   0007BA  0012               	return		;funcret
  1336   0007BC                     __end_of_tx1:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _uart_init *****************
  1340 ;; Defined at:
  1341 ;;		line 17 in file "uart.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text4
  1370   0006BC                     __ptext4:
  1371                           	callstack 0
  1372   0006BC                     _uart_init:
  1373                           	callstack 29
  1374   0006BC                     
  1375                           ;uart.c: 19:     TXSTA1bits.BRGH=1;
  1376   0006BC  84AC               	bsf	172,2,c	;volatile
  1377                           
  1378                           ;uart.c: 20:     BAUDCON1bits.BRG16=1;
  1379   0006BE  86B8               	bsf	184,3,c	;volatile
  1380                           
  1381                           ;uart.c: 21:     TXSTA2bits.BRGH=1;
  1382   0006C0  8472               	bsf	114,2,c	;volatile
  1383                           
  1384                           ;uart.c: 22:     BAUDCON2bits.BRG16=1;
  1385   0006C2  8670               	bsf	112,3,c	;volatile
  1386   0006C4                     
  1387                           ;uart.c: 23:     SPBRG1=0x8A;
  1388   0006C4  0E8A               	movlw	138
  1389   0006C6  6EAF               	movwf	175,c	;volatile
  1390                           
  1391                           ;uart.c: 24:     SPBRGH1=0x00;
  1392   0006C8  0E00               	movlw	0
  1393   0006CA  6EB0               	movwf	176,c	;volatile
  1394                           
  1395                           ;uart.c: 27:     SPBRG2=0x8A;
  1396   0006CC  0E8A               	movlw	138
  1397   0006CE  6E75               	movwf	117,c	;volatile
  1398                           
  1399                           ;uart.c: 28:     SPBRGH2=0x00;
  1400   0006D0  0E00               	movlw	0
  1401   0006D2  6E76               	movwf	118,c	;volatile
  1402   0006D4                     
  1403                           ;uart.c: 29:     TRISCbits.RC6=1;
  1404   0006D4  8C94               	bsf	148,6,c	;volatile
  1405   0006D6                     
  1406                           ;uart.c: 30:     TRISCbits.RC7=1;
  1407   0006D6  8E94               	bsf	148,7,c	;volatile
  1408   0006D8                     
  1409                           ;uart.c: 31:     TRISDbits.RD6=1;
  1410   0006D8  8C95               	bsf	149,6,c	;volatile
  1411   0006DA                     
  1412                           ;uart.c: 32:     TRISDbits.RD7=1;
  1413   0006DA  8E95               	bsf	149,7,c	;volatile
  1414   0006DC                     
  1415                           ;uart.c: 33:     TXSTA1bits.SYNC=0;
  1416   0006DC  98AC               	bcf	172,4,c	;volatile
  1417   0006DE                     
  1418                           ;uart.c: 34:     TXSTA2bits.SYNC=0;
  1419   0006DE  9872               	bcf	114,4,c	;volatile
  1420   0006E0                     
  1421                           ;uart.c: 35:     RCSTA1bits.SPEN=1;
  1422   0006E0  8EAB               	bsf	171,7,c	;volatile
  1423   0006E2                     
  1424                           ;uart.c: 36:     RCSTA2bits.SPEN=1;
  1425   0006E2  8E71               	bsf	113,7,c	;volatile
  1426   0006E4                     
  1427                           ;uart.c: 37:     TXSTA1bits.TXEN=1;
  1428   0006E4  8AAC               	bsf	172,5,c	;volatile
  1429   0006E6                     
  1430                           ;uart.c: 38:     TXSTA2bits.TXEN=1;
  1431   0006E6  8A72               	bsf	114,5,c	;volatile
  1432   0006E8                     
  1433                           ;uart.c: 44:     PIE1bits.RC1IE=1;
  1434   0006E8  8A9D               	bsf	157,5,c	;volatile
  1435   0006EA                     
  1436                           ;uart.c: 47:     RCSTA1bits.CREN=1;
  1437   0006EA  88AB               	bsf	171,4,c	;volatile
  1438   0006EC                     
  1439                           ;uart.c: 48:     RCSTA2bits.CREN=1;
  1440   0006EC  8871               	bsf	113,4,c	;volatile
  1441   0006EE  0012               	return		;funcret
  1442   0006F0                     __end_of_uart_init:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _spi_master_init *****************
  1446 ;; Defined at:
  1447 ;;		line 18 in file "spi_master.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text5
  1476   0006F0                     __ptext5:
  1477                           	callstack 0
  1478   0006F0                     _spi_master_init:
  1479                           	callstack 29
  1480   0006F0                     
  1481                           ;spi_master.c: 20:     SSP1ADD= 31;
  1482   0006F0  0E1F               	movlw	31
  1483   0006F2  6EC8               	movwf	200,c	;volatile
  1484   0006F4                     
  1485                           ;spi_master.c: 21:     SSP1STATbits.SMP = 0;
  1486   0006F4  9EC7               	bcf	199,7,c	;volatile
  1487   0006F6                     
  1488                           ;spi_master.c: 22:     SSP1STATbits.CKE = 1;
  1489   0006F6  8CC7               	bsf	199,6,c	;volatile
  1490   0006F8                     
  1491                           ;spi_master.c: 23:     SSP1CON1bits.CKP = 0;
  1492   0006F8  98C6               	bcf	198,4,c	;volatile
  1493                           
  1494                           ;spi_master.c: 24:     SSP1CON1bits.SSPM = 0x0A;
  1495   0006FA  50C6               	movf	198,w,c	;volatile
  1496   0006FC  0BF0               	andlw	-16
  1497   0006FE  090A               	iorlw	10
  1498   000700  6EC6               	movwf	198,c	;volatile
  1499                           
  1500                           ;spi_master.c: 25:     ADCON0=0x00;
  1501   000702  0E00               	movlw	0
  1502   000704  6EC2               	movwf	194,c	;volatile
  1503   000706                     
  1504                           ;spi_master.c: 26:     TRISBbits.RB2=0;
  1505   000706  9493               	bcf	147,2,c	;volatile
  1506   000708                     
  1507                           ;spi_master.c: 27:     TRISBbits.RB3=0;
  1508   000708  9693               	bcf	147,3,c	;volatile
  1509   00070A                     
  1510                           ;spi_master.c: 28:     TRISBbits.RB4=0;
  1511   00070A  9893               	bcf	147,4,c	;volatile
  1512   00070C                     
  1513                           ;spi_master.c: 29:     TRISBbits.RB5=0;
  1514   00070C  9A93               	bcf	147,5,c	;volatile
  1515   00070E                     
  1516                           ;spi_master.c: 30:     TRISCbits.RC3=0;
  1517   00070E  9694               	bcf	148,3,c	;volatile
  1518   000710                     
  1519                           ;spi_master.c: 31:     TRISCbits.RC4=1;
  1520   000710  8894               	bsf	148,4,c	;volatile
  1521   000712                     
  1522                           ;spi_master.c: 32:     TRISCbits.RC5=0;
  1523   000712  9A94               	bcf	148,5,c	;volatile
  1524   000714                     
  1525                           ;spi_master.c: 33:     LATBbits.LATB2=1;
  1526   000714  848A               	bsf	138,2,c	;volatile
  1527   000716                     
  1528                           ;spi_master.c: 34:     LATBbits.LATB3=1;
  1529   000716  868A               	bsf	138,3,c	;volatile
  1530   000718                     
  1531                           ;spi_master.c: 35:     LATBbits.LATB4=1;
  1532   000718  888A               	bsf	138,4,c	;volatile
  1533   00071A                     
  1534                           ;spi_master.c: 36:     LATBbits.LATB5=1;
  1535   00071A  8A8A               	bsf	138,5,c	;volatile
  1536   00071C                     
  1537                           ;spi_master.c: 37:     SSP1CON1bits.SSPEN = 1;
  1538   00071C  8AC6               	bsf	198,5,c	;volatile
  1539   00071E  0012               	return		;funcret
  1540   000720                     __end_of_spi_master_init:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _spi_data *****************
  1544 ;; Defined at:
  1545 ;;		line 46 in file "spi_master.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  device          1    wreg     unsigned char 
  1548 ;;  tx_data         1    6[COMRAM] unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  device          1    8[COMRAM] unsigned char 
  1551 ;;  data_read       1    7[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      unsigned char 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        3 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text6
  1576   000524                     __ptext6:
  1577                           	callstack 0
  1578   000524                     _spi_data:
  1579                           	callstack 29
  1580                           
  1581                           ;incstack = 0
  1582                           ;spi_data@device stored from wreg
  1583   000524  6E44               	movwf	spi_data@device^0,c
  1584   000526                     
  1585                           ;spi_master.c: 46: unsigned char spi_data(unsigned char device, unsigned char tx_data);s
      +                          pi_master.c: 47: {;spi_master.c: 48:     char data_read;;spi_master.c: 49:     if(device
      +                          ==0)
  1586   000526  5044               	movf	spi_data@device^0,w,c
  1587   000528  A4D8               	btfss	status,2,c
  1588   00052A  EF99  F002         	goto	u321
  1589   00052E  EF9B  F002         	goto	u320
  1590   000532                     u321:
  1591   000532  EFAA  F002         	goto	l1464
  1592   000536                     u320:
  1593   000536                     
  1594                           ;spi_master.c: 50:     {;spi_master.c: 51:         LATBbits.LATB2=0;
  1595   000536  948A               	bcf	138,2,c	;volatile
  1596                           
  1597                           ;spi_master.c: 52:         SSP1BUF=tx_data;
  1598   000538  C042  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1599   00053C                     l151:
  1600   00053C  A0C7               	btfss	199,0,c	;volatile
  1601   00053E  EFA3  F002         	goto	u331
  1602   000542  EFA5  F002         	goto	u330
  1603   000546                     u331:
  1604   000546  EF9E  F002         	goto	l151
  1605   00054A                     u330:
  1606   00054A                     
  1607                           ;spi_master.c: 54:         LATBbits.LATB2=1;
  1608   00054A  848A               	bsf	138,2,c	;volatile
  1609                           
  1610                           ;spi_master.c: 55:         data_read=SSP1BUF;
  1611   00054C  CFC9 F043          	movff	4041,spi_data@data_read	;volatile
  1612                           
  1613                           ;spi_master.c: 56:     }
  1614   000550  EFF1  F002         	goto	l1476
  1615   000554                     l1464:
  1616   000554  0444               	decf	spi_data@device^0,w,c
  1617   000556  A4D8               	btfss	status,2,c
  1618   000558  EFB0  F002         	goto	u341
  1619   00055C  EFB2  F002         	goto	u340
  1620   000560                     u341:
  1621   000560  EFC1  F002         	goto	l1468
  1622   000564                     u340:
  1623   000564                     
  1624                           ;spi_master.c: 59:     {;spi_master.c: 60:         LATBbits.LATB3=0;
  1625   000564  968A               	bcf	138,3,c	;volatile
  1626                           
  1627                           ;spi_master.c: 61:         SSP1BUF=tx_data;
  1628   000566  C042  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1629   00056A                     l156:
  1630   00056A  A0C7               	btfss	199,0,c	;volatile
  1631   00056C  EFBA  F002         	goto	u351
  1632   000570  EFBC  F002         	goto	u350
  1633   000574                     u351:
  1634   000574  EFB5  F002         	goto	l156
  1635   000578                     u350:
  1636   000578                     
  1637                           ;spi_master.c: 63:         LATBbits.LATB3=1;
  1638   000578  868A               	bsf	138,3,c	;volatile
  1639                           
  1640                           ;spi_master.c: 64:         data_read=SSP1BUF;
  1641   00057A  CFC9 F043          	movff	4041,spi_data@data_read	;volatile
  1642                           
  1643                           ;spi_master.c: 65:     }
  1644   00057E  EFF1  F002         	goto	l1476
  1645   000582                     l1468:
  1646   000582  0E02               	movlw	2
  1647   000584  1844               	xorwf	spi_data@device^0,w,c
  1648   000586  A4D8               	btfss	status,2,c
  1649   000588  EFC8  F002         	goto	u361
  1650   00058C  EFCA  F002         	goto	u360
  1651   000590                     u361:
  1652   000590  EFD9  F002         	goto	l1472
  1653   000594                     u360:
  1654   000594                     
  1655                           ;spi_master.c: 68:     {;spi_master.c: 69:         LATBbits.LATB4=0;
  1656   000594  988A               	bcf	138,4,c	;volatile
  1657                           
  1658                           ;spi_master.c: 70:         SSP1BUF=tx_data;
  1659   000596  C042  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1660   00059A                     l161:
  1661   00059A  A0C7               	btfss	199,0,c	;volatile
  1662   00059C  EFD2  F002         	goto	u371
  1663   0005A0  EFD4  F002         	goto	u370
  1664   0005A4                     u371:
  1665   0005A4  EFCD  F002         	goto	l161
  1666   0005A8                     u370:
  1667   0005A8                     
  1668                           ;spi_master.c: 72:         LATBbits.LATB4=1;
  1669   0005A8  888A               	bsf	138,4,c	;volatile
  1670                           
  1671                           ;spi_master.c: 73:         data_read=SSP1BUF;
  1672   0005AA  CFC9 F043          	movff	4041,spi_data@data_read	;volatile
  1673                           
  1674                           ;spi_master.c: 74:     }
  1675   0005AE  EFF1  F002         	goto	l1476
  1676   0005B2                     l1472:
  1677   0005B2  0E03               	movlw	3
  1678   0005B4  1844               	xorwf	spi_data@device^0,w,c
  1679   0005B6  A4D8               	btfss	status,2,c
  1680   0005B8  EFE0  F002         	goto	u381
  1681   0005BC  EFE2  F002         	goto	u380
  1682   0005C0                     u381:
  1683   0005C0  EFF1  F002         	goto	l159
  1684   0005C4                     u380:
  1685   0005C4                     
  1686                           ;spi_master.c: 77:     {;spi_master.c: 78:         LATBbits.LATB5=0;
  1687   0005C4  9A8A               	bcf	138,5,c	;volatile
  1688                           
  1689                           ;spi_master.c: 79:         SSP1BUF=tx_data;
  1690   0005C6  C042  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1691   0005CA                     l166:
  1692   0005CA  A0C7               	btfss	199,0,c	;volatile
  1693   0005CC  EFEA  F002         	goto	u391
  1694   0005D0  EFEC  F002         	goto	u390
  1695   0005D4                     u391:
  1696   0005D4  EFE5  F002         	goto	l166
  1697   0005D8                     u390:
  1698   0005D8                     
  1699                           ;spi_master.c: 81:         LATBbits.LATB5=1;
  1700   0005D8  8A8A               	bsf	138,5,c	;volatile
  1701                           
  1702                           ;spi_master.c: 82:         data_read=SSP1BUF;
  1703   0005DA  CFC9 F043          	movff	4041,spi_data@data_read	;volatile
  1704   0005DE  EFF1  F002         	goto	l1476
  1705   0005E2                     l159:
  1706   0005E2                     l1476:
  1707                           
  1708                           ;spi_master.c: 85:     return data_read;
  1709   0005E2  5043               	movf	spi_data@data_read^0,w,c
  1710   0005E4  0012               	return		;funcret
  1711   0005E6                     __end_of_spi_data:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _rx1_overrun_detect_reset *****************
  1715 ;; Defined at:
  1716 ;;		line 98 in file "uart.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text7
  1745   0007BC                     __ptext7:
  1746                           	callstack 0
  1747   0007BC                     _rx1_overrun_detect_reset:
  1748                           	callstack 29
  1749   0007BC                     
  1750                           ;uart.c: 100:           if(RCSTA1bits.OERR)
  1751   0007BC  A2AB               	btfss	171,1,c	;volatile
  1752   0007BE  EFE3  F003         	goto	u431
  1753   0007C2  EFE5  F003         	goto	u430
  1754   0007C6                     u431:
  1755   0007C6  EFEB  F003         	goto	l251
  1756   0007CA                     u430:
  1757   0007CA                     
  1758                           ;uart.c: 101:           {;uart.c: 102:               RCSTA1bits.CREN = 0;
  1759   0007CA  98AB               	bcf	171,4,c	;volatile
  1760   0007CC                     
  1761                           ;uart.c: 103:               _delay((unsigned long)((4)*(64000000/4000000.0)));
  1762   0007CC  0E15               	movlw	21
  1763   0007CE                     u607:
  1764   0007CE  2EE8               	decfsz	wreg,f,c
  1765   0007D0  D7FE               	bra	u607
  1766   0007D2  F000               	nop	
  1767   0007D4                     
  1768                           ;uart.c: 104:               RCSTA1bits.CREN = 1;
  1769   0007D4  88AB               	bsf	171,4,c	;volatile
  1770   0007D6                     l251:
  1771   0007D6  0012               	return		;funcret
  1772   0007D8                     __end_of_rx1_overrun_detect_reset:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _high_beams_on *****************
  1776 ;; Defined at:
  1777 ;;		line 30 in file "gpio.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:        1 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text8
  1806   00074E                     __ptext8:
  1807                           	callstack 0
  1808   00074E                     _high_beams_on:
  1809                           	callstack 29
  1810   00074E                     
  1811                           ;gpio.c: 32:     LATD=0b00000010;
  1812   00074E  0E02               	movlw	2
  1813   000750  6E8C               	movwf	140,c	;volatile
  1814   000752                     
  1815                           ;gpio.c: 33:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1816   000752  0ED0               	movlw	208
  1817   000754  6E42               	movwf	??_high_beams_on^0,c
  1818   000756  0ECA               	movlw	202
  1819   000758                     u617:
  1820   000758  2EE8               	decfsz	wreg,f,c
  1821   00075A  D7FE               	bra	u617
  1822   00075C  2E42               	decfsz	??_high_beams_on^0,f,c
  1823   00075E  D7FC               	bra	u617
  1824   000760                     
  1825                           ;gpio.c: 34:     _delay((unsigned long)((5)*(64000000/4000.0)));
  1826   000760  0E68               	movlw	104
  1827   000762  6E42               	movwf	??_high_beams_on^0,c
  1828   000764  0EE4               	movlw	228
  1829   000766                     u627:
  1830   000766  2EE8               	decfsz	wreg,f,c
  1831   000768  D7FE               	bra	u627
  1832   00076A  2E42               	decfsz	??_high_beams_on^0,f,c
  1833   00076C  D7FC               	bra	u627
  1834   00076E  D000               	nop2	
  1835                           
  1836                           ;gpio.c: 35:     LATD=0;
  1837   000770  0E00               	movlw	0
  1838   000772  6E8C               	movwf	140,c	;volatile
  1839   000774  0012               	return		;funcret
  1840   000776                     __end_of_high_beams_on:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _gpio_init *****************
  1844 ;; Defined at:
  1845 ;;		line 12 in file "gpio.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 2
  1866 ;; This function calls:
  1867 ;;		_debug_leds_off
  1868 ;;		_high_beams_off
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text9
  1875   000720                     __ptext9:
  1876                           	callstack 0
  1877   000720                     _gpio_init:
  1878                           	callstack 28
  1879   000720                     
  1880                           ;gpio.c: 14:     ANSELA=0;
  1881   000720  0E00               	movlw	0
  1882   000722  010F               	movlb	15	; () banked
  1883   000724  6F38               	movwf	56,b	;volatile
  1884                           
  1885                           ;gpio.c: 15:     ANSELB=0;
  1886   000726  0E00               	movlw	0
  1887   000728  6F39               	movwf	57,b	;volatile
  1888                           
  1889                           ;gpio.c: 16:     ANSELC=0;
  1890   00072A  0E00               	movlw	0
  1891   00072C  6F3A               	movwf	58,b	;volatile
  1892                           
  1893                           ;gpio.c: 17:     ANSELD=0;
  1894   00072E  0E00               	movlw	0
  1895   000730  6F3B               	movwf	59,b	;volatile
  1896                           
  1897                           ;gpio.c: 18:     ANSELE=0;
  1898   000732  0E00               	movlw	0
  1899   000734  6F3C               	movwf	60,b	;volatile
  1900   000736                     
  1901                           ; BSR set to: 15
  1902                           ;gpio.c: 19:    CM1CON0bits.C1ON=0;
  1903   000736  9E79               	bcf	121,7,c	;volatile
  1904   000738                     
  1905                           ; BSR set to: 15
  1906                           ;gpio.c: 20:    CM2CON0bits.C2ON=0;
  1907   000738  9E78               	bcf	120,7,c	;volatile
  1908   00073A                     
  1909                           ; BSR set to: 15
  1910                           ;gpio.c: 21:    TRISAbits.TRISA0 = 0;
  1911   00073A  9092               	bcf	146,0,c	;volatile
  1912   00073C                     
  1913                           ; BSR set to: 15
  1914                           ;gpio.c: 22:    TRISAbits.TRISA1 = 0;
  1915   00073C  9292               	bcf	146,1,c	;volatile
  1916   00073E                     
  1917                           ; BSR set to: 15
  1918                           ;gpio.c: 23:    TRISAbits.TRISA2 = 0;
  1919   00073E  9492               	bcf	146,2,c	;volatile
  1920   000740                     
  1921                           ; BSR set to: 15
  1922                           ;gpio.c: 24:    TRISD &= 0xFC;
  1923   000740  0EFC               	movlw	252
  1924   000742  1695               	andwf	149,f,c	;volatile
  1925   000744                     
  1926                           ; BSR set to: 15
  1927                           ;gpio.c: 25:    debug_leds_off();
  1928   000744  EC05  F004         	call	_debug_leds_off	;wreg free
  1929                           
  1930                           ;gpio.c: 26:    high_beams_off();
  1931   000748  ECBB  F003         	call	_high_beams_off	;wreg free
  1932   00074C  0012               	return		;funcret
  1933   00074E                     __end_of_gpio_init:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _high_beams_off *****************
  1937 ;; Defined at:
  1938 ;;		line 39 in file "gpio.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_gpio_init
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text10
  1968   000776                     __ptext10:
  1969                           	callstack 0
  1970   000776                     _high_beams_off:
  1971                           	callstack 29
  1972   000776                     
  1973                           ;gpio.c: 41:     LATD = 0b00000001;
  1974   000776  0E01               	movlw	1
  1975   000778  6E8C               	movwf	140,c	;volatile
  1976   00077A                     
  1977                           ;gpio.c: 42:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1978   00077A  0ED0               	movlw	208
  1979   00077C  6E42               	movwf	??_high_beams_off^0,c
  1980   00077E  0ECA               	movlw	202
  1981   000780                     u637:
  1982   000780  2EE8               	decfsz	wreg,f,c
  1983   000782  D7FE               	bra	u637
  1984   000784  2E42               	decfsz	??_high_beams_off^0,f,c
  1985   000786  D7FC               	bra	u637
  1986   000788                     
  1987                           ;gpio.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
  1988   000788  0E68               	movlw	104
  1989   00078A  6E42               	movwf	??_high_beams_off^0,c
  1990   00078C  0EE4               	movlw	228
  1991   00078E                     u647:
  1992   00078E  2EE8               	decfsz	wreg,f,c
  1993   000790  D7FE               	bra	u647
  1994   000792  2E42               	decfsz	??_high_beams_off^0,f,c
  1995   000794  D7FC               	bra	u647
  1996   000796  D000               	nop2	
  1997                           
  1998                           ;gpio.c: 44:     LATD=0;
  1999   000798  0E00               	movlw	0
  2000   00079A  6E8C               	movwf	140,c	;volatile
  2001   00079C  0012               	return		;funcret
  2002   00079E                     __end_of_high_beams_off:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _debug_leds_off *****************
  2006 ;; Defined at:
  2007 ;;		line 54 in file "gpio.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_gpio_init
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text11
  2036   00080A                     __ptext11:
  2037                           	callstack 0
  2038   00080A                     _debug_leds_off:
  2039                           	callstack 28
  2040   00080A                     
  2041                           ;gpio.c: 56:    LATA &= 0xF8;
  2042   00080A  0EF8               	movlw	248
  2043   00080C  1689               	andwf	137,f,c	;volatile
  2044   00080E  0012               	return		;funcret
  2045   000810                     __end_of_debug_leds_off:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _UART_ISR *****************
  2049 ;; Defined at:
  2050 ;;		line 180 in file "uart.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		Interrupt level 2
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	intcode
  2078   000008                     __pintcode:
  2079                           	callstack 0
  2080   000008                     _UART_ISR:
  2081                           	callstack 28
  2082                           
  2083                           ;incstack = 0
  2084   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2085   00000A  CFE1 F03E          	movff	fsr1l,??_UART_ISR+2
  2086   00000E  CFE2 F03F          	movff	fsr1h,??_UART_ISR+3
  2087   000012  CFD9 F040          	movff	fsr2l,??_UART_ISR+4
  2088   000016  CFDA F041          	movff	fsr2h,??_UART_ISR+5
  2089   00001A                     
  2090                           ;uart.c: 182:     if(PIR1bits.RC1IF)
  2091   00001A  AA9E               	btfss	158,5,c	;volatile
  2092   00001C  EF12  F000         	goto	i2u56_41
  2093   000020  EF14  F000         	goto	i2u56_40
  2094   000024                     i2u56_41:
  2095   000024  EF64  F000         	goto	i2l256
  2096   000028                     i2u56_40:
  2097   000028                     
  2098                           ;uart.c: 183:     {;uart.c: 184:         rx_char=RCREG1;
  2099   000028  CFAE F01D          	movff	4014,_rx_char	;volatile
  2100                           
  2101                           ;uart.c: 185:         PIR1bits.RC1IF=0;
  2102   00002C  9A9E               	bcf	158,5,c	;volatile
  2103   00002E                     
  2104                           ;uart.c: 186:         if(rx_char == 'z')
  2105   00002E  0E7A               	movlw	122
  2106   000030  181D               	xorwf	_rx_char^0,w,c	;volatile
  2107   000032  A4D8               	btfss	status,2,c
  2108   000034  EF1E  F000         	goto	i2u57_41
  2109   000038  EF20  F000         	goto	i2u57_40
  2110   00003C                     i2u57_41:
  2111   00003C  EF24  F000         	goto	i2l1690
  2112   000040                     i2u57_40:
  2113   000040                     
  2114                           ;uart.c: 187:         {;uart.c: 188:             recording_on = 1;
  2115   000040  0E01               	movlw	1
  2116   000042  6E1C               	movwf	_recording_on^0,c	;volatile
  2117                           
  2118                           ;uart.c: 189:         }
  2119   000044  EF4F  F000         	goto	i2l1704
  2120   000048                     i2l1690:
  2121   000048  0E79               	movlw	121
  2122   00004A  181D               	xorwf	_rx_char^0,w,c	;volatile
  2123   00004C  A4D8               	btfss	status,2,c
  2124   00004E  EF2B  F000         	goto	i2u58_41
  2125   000052  EF2D  F000         	goto	i2u58_40
  2126   000056                     i2u58_41:
  2127   000056  EF31  F000         	goto	i2l258
  2128   00005A                     i2u58_40:
  2129   00005A                     
  2130                           ;uart.c: 191:         {;uart.c: 192:             recording_on = 0;
  2131   00005A  0E00               	movlw	0
  2132   00005C  6E1C               	movwf	_recording_on^0,c	;volatile
  2133                           
  2134                           ;uart.c: 193:         }
  2135   00005E  EF4F  F000         	goto	i2l1704
  2136   000062                     i2l258:
  2137                           
  2138                           ;uart.c: 199:         switch (recording_on)
  2139   000062  EF4F  F000         	goto	i2l1704
  2140   000066                     i2l1694:
  2141                           
  2142                           ;uart.c: 202:                 rx_str_interrupt = &wii_classic_packet;
  2143   000066  0E31               	movlw	low _wii_classic_packet
  2144   000068  6E4D               	movwf	_rx_str_interrupt^0,c
  2145   00006A  0E00               	movlw	high _wii_classic_packet
  2146   00006C  6E4E               	movwf	(_rx_str_interrupt+1)^0,c
  2147                           
  2148                           ;uart.c: 203:                 break;
  2149   00006E  EF64  F000         	goto	i2l256
  2150   000072                     i2l1696:
  2151                           
  2152                           ;uart.c: 205:                 *rx_str_interrupt++ = rx_char;
  2153   000072  C04D  FFD9         	movff	_rx_str_interrupt,fsr2l
  2154   000076  C04E  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  2155   00007A  C01D  FFDF         	movff	_rx_char,indf2	;volatile
  2156   00007E  4A4D               	infsnz	_rx_str_interrupt^0,f,c
  2157   000080  2A4E               	incf	(_rx_str_interrupt+1)^0,f,c
  2158                           
  2159                           ;uart.c: 206:                 break;
  2160   000082  EF64  F000         	goto	i2l256
  2161   000086                     i2l1700:
  2162                           
  2163                           ;uart.c: 208:                 *rx_str_interrupt = *rx_str_interrupt;
  2164   000086  C04D  FFD9         	movff	_rx_str_interrupt,fsr2l
  2165   00008A  C04E  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  2166   00008E  C04D  FFE1         	movff	_rx_str_interrupt,fsr1l
  2167   000092  C04E  FFE2         	movff	_rx_str_interrupt+1,fsr1h
  2168   000096  CFDF FFE7          	movff	indf2,indf1
  2169                           
  2170                           ;uart.c: 209:                 break;
  2171   00009A  EF64  F000         	goto	i2l256
  2172   00009E                     i2l1704:
  2173   00009E  501C               	movf	_recording_on^0,w,c	;volatile
  2174   0000A0  6E3C               	movwf	??_UART_ISR^0,c
  2175   0000A2  6A3D               	clrf	(??_UART_ISR+1)^0,c
  2176                           
  2177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2178                           ; Switch size 1, requested type "simple"
  2179                           ; Number of cases is 1, Range of values is 0 to 0
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte            4     3 (average)
  2183                           ;	Chosen strategy is simple_byte
  2184   0000A4  503D               	movf	(??_UART_ISR+1)^0,w,c
  2185   0000A6  0A00               	xorlw	0	; case 0
  2186   0000A8  B4D8               	btfsc	status,2,c
  2187   0000AA  EF59  F000         	goto	i2l1774
  2188   0000AE  EF43  F000         	goto	i2l1700
  2189   0000B2                     i2l1774:
  2190                           
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 2, Range of values is 0 to 1
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            7     4 (average)
  2196                           ;	Chosen strategy is simple_byte
  2197   0000B2  503C               	movf	??_UART_ISR^0,w,c
  2198   0000B4  0A00               	xorlw	0	; case 0
  2199   0000B6  B4D8               	btfsc	status,2,c
  2200   0000B8  EF33  F000         	goto	i2l1694
  2201   0000BC  0A01               	xorlw	1	; case 1
  2202   0000BE  B4D8               	btfsc	status,2,c
  2203   0000C0  EF39  F000         	goto	i2l1696
  2204   0000C4  EF43  F000         	goto	i2l1700
  2205   0000C8                     i2l256:
  2206                           
  2207                           ;uart.c: 213:     PIR1bits.RC1IF = 0;
  2208   0000C8  9A9E               	bcf	158,5,c	;volatile
  2209   0000CA  C041  FFDA         	movff	??_UART_ISR+5,fsr2h
  2210   0000CE  C040  FFD9         	movff	??_UART_ISR+4,fsr2l
  2211   0000D2  C03F  FFE2         	movff	??_UART_ISR+3,fsr1h
  2212   0000D6  C03E  FFE1         	movff	??_UART_ISR+2,fsr1l
  2213   0000DA  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2214   0000DC  0011               	retfie		f
  2215   0000DE                     __end_of_UART_ISR:
  2216                           	callstack 0
  2217   000000                     
  2218                           	psect	rparam
  2219   000000                     
  2220                           	psect	temp
  2221   00004F                     btemp:
  2222                           	callstack 0
  2223   00004F                     	ds	1
  2224   000000                     int$flags	set	btemp
  2225   000000                     wtemp8	set	btemp+1
  2226   000000                     ttemp5	set	btemp+1
  2227   000000                     ttemp6	set	btemp+4
  2228   000000                     ttemp7	set	btemp+8
  2229                           
  2230                           	psect	idloc
  2231                           
  2232                           ;Config register IDLOC0 @ 0x200000
  2233                           ;	unspecified, using default values
  2234   200000                     	org	2097152
  2235   200000  FF                 	db	255
  2236                           
  2237                           ;Config register IDLOC1 @ 0x200001
  2238                           ;	unspecified, using default values
  2239   200001                     	org	2097153
  2240   200001  FF                 	db	255
  2241                           
  2242                           ;Config register IDLOC2 @ 0x200002
  2243                           ;	unspecified, using default values
  2244   200002                     	org	2097154
  2245   200002  FF                 	db	255
  2246                           
  2247                           ;Config register IDLOC3 @ 0x200003
  2248                           ;	unspecified, using default values
  2249   200003                     	org	2097155
  2250   200003  FF                 	db	255
  2251                           
  2252                           ;Config register IDLOC4 @ 0x200004
  2253                           ;	unspecified, using default values
  2254   200004                     	org	2097156
  2255   200004  FF                 	db	255
  2256                           
  2257                           ;Config register IDLOC5 @ 0x200005
  2258                           ;	unspecified, using default values
  2259   200005                     	org	2097157
  2260   200005  FF                 	db	255
  2261                           
  2262                           ;Config register IDLOC6 @ 0x200006
  2263                           ;	unspecified, using default values
  2264   200006                     	org	2097158
  2265   200006  FF                 	db	255
  2266                           
  2267                           ;Config register IDLOC7 @ 0x200007
  2268                           ;	unspecified, using default values
  2269   200007                     	org	2097159
  2270   200007  FF                 	db	255
  2271                           
  2272                           	psect	config
  2273                           
  2274                           ; Padding undefined space
  2275   300000                     	org	3145728
  2276   300000  FF                 	db	255
  2277                           
  2278                           ;Config register CONFIG1H @ 0x300001
  2279                           ;	Oscillator Selection bits
  2280                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  2281                           ;	4X PLL Enable
  2282                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2283                           ;	Primary clock enable bit
  2284                           ;	PRICLKEN = ON, Primary clock is always enabled
  2285                           ;	Fail-Safe Clock Monitor Enable bit
  2286                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2287                           ;	Internal/External Oscillator Switchover bit
  2288                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2289   300001                     	org	3145729
  2290   300001  32                 	db	50
  2291                           
  2292                           ;Config register CONFIG2L @ 0x300002
  2293                           ;	Power-up Timer Enable bit
  2294                           ;	PWRTEN = OFF, Power up timer disabled
  2295                           ;	Brown-out Reset Enable bits
  2296                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2297                           ;	Brown Out Reset Voltage bits
  2298                           ;	BORV = 0x3, unprogrammed default
  2299   300002                     	org	3145730
  2300   300002  19                 	db	25
  2301                           
  2302                           ;Config register CONFIG2H @ 0x300003
  2303                           ;	Watchdog Timer Enable bits
  2304                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2305                           ;	Watchdog Timer Postscale Select bits
  2306                           ;	WDTPS = 0xF, unprogrammed default
  2307   300003                     	org	3145731
  2308   300003  3C                 	db	60
  2309                           
  2310                           ; Padding undefined space
  2311   300004                     	org	3145732
  2312   300004  FF                 	db	255
  2313                           
  2314                           ;Config register CONFIG3H @ 0x300005
  2315                           ;	CCP2 MUX bit
  2316                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2317                           ;	PORTB A/D Enable bit
  2318                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2319                           ;	P3A/CCP3 Mux bit
  2320                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2321                           ;	HFINTOSC Fast Start-up
  2322                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  2323                           ;	Timer3 Clock input mux bit
  2324                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2325                           ;	ECCP2 B output mux bit
  2326                           ;	P2BMX = PORTC0, P2B is on RC0
  2327                           ;	MCLR Pin Enable bit
  2328                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2329   300005                     	org	3145733
  2330   300005  91                 	db	145
  2331                           
  2332                           ;Config register CONFIG4L @ 0x300006
  2333                           ;	Stack Full/Underflow Reset Enable bit
  2334                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2335                           ;	Single-Supply ICSP Enable bit
  2336                           ;	LVP = OFF, Single-Supply ICSP disabled
  2337                           ;	Extended Instruction Set Enable bit
  2338                           ;	XINST = 0x0, unprogrammed default
  2339                           ;	Background Debug
  2340                           ;	DEBUG = OFF, Disabled
  2341   300006                     	org	3145734
  2342   300006  81                 	db	129
  2343                           
  2344                           ; Padding undefined space
  2345   300007                     	org	3145735
  2346   300007  FF                 	db	255
  2347                           
  2348                           ;Config register CONFIG5L @ 0x300008
  2349                           ;	Code Protection Block 0
  2350                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2351                           ;	Code Protection Block 1
  2352                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2353                           ;	Code Protection Block 2
  2354                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2355                           ;	Code Protection Block 3
  2356                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2357   300008                     	org	3145736
  2358   300008  0F                 	db	15
  2359                           
  2360                           ;Config register CONFIG5H @ 0x300009
  2361                           ;	Boot Block Code Protection bit
  2362                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2363                           ;	Data EEPROM Code Protection bit
  2364                           ;	CPD = OFF, Data EEPROM not code-protected
  2365   300009                     	org	3145737
  2366   300009  C0                 	db	192
  2367                           
  2368                           ;Config register CONFIG6L @ 0x30000A
  2369                           ;	Write Protection Block 0
  2370                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2371                           ;	Write Protection Block 1
  2372                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2373                           ;	Write Protection Block 2
  2374                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2375                           ;	Write Protection Block 3
  2376                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2377   30000A                     	org	3145738
  2378   30000A  0F                 	db	15
  2379                           
  2380                           ;Config register CONFIG6H @ 0x30000B
  2381                           ;	Configuration Register Write Protection bit
  2382                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2383                           ;	Boot Block Write Protection bit
  2384                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2385                           ;	Data EEPROM Write Protection bit
  2386                           ;	WRTD = OFF, Data EEPROM not write-protected
  2387   30000B                     	org	3145739
  2388   30000B  E0                 	db	224
  2389                           
  2390                           ;Config register CONFIG7L @ 0x30000C
  2391                           ;	Table Read Protection Block 0
  2392                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2393                           ;	Table Read Protection Block 1
  2394                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2395                           ;	Table Read Protection Block 2
  2396                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2397                           ;	Table Read Protection Block 3
  2398                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2399   30000C                     	org	3145740
  2400   30000C  0F                 	db	15
  2401                           
  2402                           ;Config register CONFIG7H @ 0x30000D
  2403                           ;	Boot Block Table Read Protection bit
  2404                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2405   30000D                     	org	3145741
  2406   30000D  40                 	db	64
  2407                           tosu	equ	0xFFF
  2408                           tosh	equ	0xFFE
  2409                           tosl	equ	0xFFD
  2410                           stkptr	equ	0xFFC
  2411                           pclatu	equ	0xFFB
  2412                           pclath	equ	0xFFA
  2413                           pcl	equ	0xFF9
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           indf0	equ	0xFEF
  2421                           postinc0	equ	0xFEE
  2422                           postdec0	equ	0xFED
  2423                           preinc0	equ	0xFEC
  2424                           plusw0	equ	0xFEB
  2425                           fsr0h	equ	0xFEA
  2426                           fsr0l	equ	0xFE9
  2427                           wreg	equ	0xFE8
  2428                           indf1	equ	0xFE7
  2429                           postinc1	equ	0xFE6
  2430                           postdec1	equ	0xFE5
  2431                           preinc1	equ	0xFE4
  2432                           plusw1	equ	0xFE3
  2433                           fsr1h	equ	0xFE2
  2434                           fsr1l	equ	0xFE1
  2435                           bsr	equ	0xFE0
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           preinc2	equ	0xFDC
  2440                           plusw2	equ	0xFDB
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        151
    BSS         32
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      78
    BANK0           160      0     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    uart_wr_str@str	PTR unsigned char  size(2) Largest target is 48
		 -> instructions3(BANK0[48]), instructions2(BANK0[39]), instructions1(BANK0[37]), text1(COMRAM[16]), 
		 -> wii_classic_packet(COMRAM[10]), 

    rx_str_interrupt	PTR volatile unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), wii_classic_packet(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_uart_wr_str
    _uart_wr_str->_tx1
    _uart_wr_str->_tx2
    _gpio_init->_high_beams_off

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1828
                                             12 COMRAM     5     5      0
                          _gpio_init
                     _high_beams_off
                      _high_beams_on
           _rx1_overrun_detect_reset
                           _spi_data
                    _spi_master_init
                                _tx1
                                _tx2
                          _uart_init
                        _uart_wr_str
 ---------------------------------------------------------------------------------
 (1) _uart_wr_str                                          5     3      2     581
                                              7 COMRAM     5     3      2
                                _tx1
                                _tx2
 ---------------------------------------------------------------------------------
 (2) _tx2                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _tx1                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             3     2      1    1190
                                              6 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rx1_overrun_detect_reset                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _high_beams_on                                        1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
                     _debug_leds_off
                     _high_beams_off
 ---------------------------------------------------------------------------------
 (1) _high_beams_off                                       1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_leds_off                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_ISR                                             6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_init
     _debug_leds_off
     _high_beams_off
   _high_beams_off
   _high_beams_on
   _rx1_overrun_detect_reset
   _spi_data
   _spi_master_init
   _tx1
   _tx2
   _uart_init
   _uart_wr_str
     _tx1
     _tx2

 _UART_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlll        33      0       0      51        0.0%
BITBIGSFRhhhhl      21      0       0      38        0.0%
BITBIGSFRhlll        F      0       0      48        0.0%
BITBIGSFRhhhhh       D      0       0      37        0.0%
BITBIGSFRhhhlll      9      0       0      41        0.0%
BITBIGSFRhhhlll      7      0       0      42        0.0%
BITBIGSFRhhhlll      7      0       0      45        0.0%
BITBIGSFRhhhlll      6      0       0      43        0.0%
BITBIGSFRhhhlh       6      0       0      39        0.0%
BITBIGSFRhhhlll      5      0       0      44        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRhhhllh      3      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      49        0.0%
BITBIGSFRlhl         1      0       0      50        0.0%
BITBIGSFRhllh        1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      33        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 12 22:50:29 2023

                  uart_wr_str@str 0043          _rx1_overrun_detect_reset 07BC  
                 uart_wr_str@port 0047                                l31 074C  
                              l34 0774                                l43 080E  
                              l37 079C                               l111 0316  
                             l221 07A0                               l230 0808  
                             l151 053C                               l224 07BA  
                             l161 059A                               l153 054A  
                             l218 06EE                               l251 07D6  
                             l163 05A8                               l147 071E  
                             l227 07F6                               l156 056A  
                             l166 05CA                               l158 0578  
                             l159 05E2                               l247 0522  
                             l168 05D8                               l169 05E4  
                             u300 07AE                               u301 07AA  
                             u310 0804                               u311 0800  
                             u320 0536                               u400 0492  
                             u321 0532                               u401 048E  
                             u330 054A                               u410 04C0  
                             u331 0546                               u411 04BC  
                             u340 0564                               u420 04EE  
                             u500 0404                               u341 0560  
                             u421 04EA                               u501 03FE  
                             u430 07CA                               u350 0578  
                             u510 0406                               u431 07C6  
                             u351 0574                               u360 0594  
                             u520 0418                               u440 02B6  
                             u361 0590                               u521 0414  
                             u441 02B2                               u370 05A8  
                             u530 0432                               u450 02D4  
                             u371 05A4                               u531 042C  
                             u451 02D0                               u380 05C4  
                             u540 0434                               u381 05C0  
                             u390 05D8                               u550 0452  
                             u607 07CE                               u391 05D4  
                             u551 044E                               u617 0758  
                             u465 02E8                               u627 0766  
                             u475 02FA                               u637 0780  
                             u485 03E6                               u486 03E8  
                             u647 078E                               u495 03F0  
                             u496 03F2                               u597 07B4  
                  spi_data@device 0044                               _tx1 079E  
                             _tx2 07F4                               wreg 000FE8  
                      _TXSTA1bits 000FAC                        _TXSTA2bits 000F72  
                            l1400 06F4                              l1410 070A  
                            l1402 06F6                              l1420 0714  
                            l1412 070C                              l1404 06F8  
                            l1510 07BC                              l1422 0716  
                            l1414 070E                              l1406 0706  
                            l1430 06BC                              l1502 04F2  
                            l1360 0776                              l1512 07CA  
                            l1424 0718                              l1416 0710  
                            l1408 0708                              l1440 06DA  
                            l1432 06C4                              l1504 051C  
                            l1600 0236                              l1520 00EA  
                            l1362 077A                              l1514 07CC  
                            l1426 071A                              l1418 0712  
                            l1450 06E4                              l1442 06DC  
                            l1434 06D4                              l1370 07B2  
                            l1610 0262                              l1602 0240  
                            l1530 0100                              l1522 00EC  
                            l1364 0788                              l1380 0738  
                            l1516 07D4                              l1460 0526  
                            l1428 071C                              l1452 06E6  
                            l1444 06DE                              l1436 06D6  
                            l1372 07F6                              l1620 028C  
                            l1612 026A                              l1604 0248  
                            l1540 0132                              l1532 010A  
                            l1524 00F0                              l1358 080A  
                            l1390 0744                              l1382 073A  
                            l1470 0594                              l1462 0536  
                            l1454 06E8                              l1446 06E0  
                            l1438 06D8                              l1366 07A0  
                            l1374 0804                              l1630 02B6  
                            l1622 0296                              l1614 0270  
                            l1606 024E                              l1550 0158  
                            l1542 0138                              l1534 0118  
                            l1526 00FC                              l1518 00E2  
                            l1384 073C                              l1376 0720  
                            l1392 074E                              l1472 05B2  
                            l1464 0554                              l1456 06EA  
                            l1448 06E2                              l1368 07AE  
                            l1480 0464                              l1640 031E  
                            l1632 02BE                              l1624 029E  
                            l1616 027A                              l1608 0258  
                            l1560 017E                              l1552 0166  
                            l1544 013E                              l1536 011E  
                            l1528 00FE                              l1386 073E  
                            l1378 0736                              l1394 0752  
                            l1474 05C4                              l1466 0564  
                            l1458 06EC                              l1490 04A4  
                            l1482 0468                              l1650 0350  
                            l1642 0328                              l1634 02C2  
                            l1626 02A4                              l1618 0282  
                            l1570 01A0                              l1562 0184  
                            l1554 016C                              l1546 014C  
                            l1538 0124                              l1388 0740  
                            l1396 0760                              l1468 0582  
                            l1476 05E2                              l1492 04A8  
                            l1484 0476                              l1652 035A  
                            l1644 0332                              l1660 0376  
                            l1636 02D4                              l1628 02A6  
                            l1580 01D2                              l1572 01AE  
                            l1564 018A                              l1556 0172  
                            l1548 0152                              l1398 06F0  
                            l1494 04C4                              l1486 047A  
                            l1670 0418                              l1654 0364  
                            l1646 033C                              l1662 03D8  
                            l1638 02D6                              l1590 0204  
                            l1582 01DC                              l1574 01B4  
                            l1566 0190                              l1558 0178  
                            l1496 04D2                              l1488 0496  
                            l1672 0420                              l1664 03DE  
                            l1656 036E                              l1648 0346  
                            l1592 020E                              l1584 01E6  
                            l1576 01BE                              l1568 0196  
                            l1498 04D6                              l1674 0452  
                            l1666 03E8                              l1770 038A  
                            l1594 0218                              l1586 01F0  
                            l1578 01C8                              l1772 0506  
                            l1676 0456                              l1668 03F2  
                            l1596 0222                              l1588 01FA  
                            l1598 022C                              ?_tx1 003C  
                            ?_tx2 003C                              _LATA 000F89  
                            _LATD 000F8C                              _IPEN 007E87  
                            _main 00E2                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 004F  
                            start 00DE                      ___param_bank 000000  
                 spi_data@tx_data 0042                             ??_tx1 0042  
                           ??_tx2 0042                      _BAUDCON1bits 000FB8  
                    _BAUDCON2bits 000F70                             ?_main 003C  
                           i2l256 00C8                             i2l266 00CA  
                           i2l258 0062                     _arrow_buttons 0014  
                           _TRISD 000F95                   ??_high_beams_on 0042  
                __end_of_UART_ISR 00DE                             _text1 0021  
                           tablat 000FF5                             ttemp5 0050  
                           ttemp6 0053                             ttemp7 0057  
                           status 000FD8                             wtemp8 0050  
                  _debug_leds_off 080A                _debouncing_counter 001F  
                 __initialization 0662                      __end_of_main 0462  
             _servo_controller_tx 0020                            ??_main 0048  
                   __activetblptr 000002                            _ADCON0 000FC2  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            _ANSELD 000F3B  
                          _ANSELE 000F3C                            i2l1700 0086  
                          i2l1704 009E                            i2l1690 0048  
                          i2l1682 001A                            i2l1692 005A  
                          i2l1684 0028                            i2l1774 00B2  
                          i2l1694 0066                            i2l1686 002E  
                          i2l1696 0072                            i2l1688 0040  
                          i2l1698 007E                            _INTCON 000FF2  
                          _RCREG1 000FAE                            _SPBRG1 000FAF  
                          _SPBRG2 000F75            __end_of_debug_leds_off 0810  
                          _TXREG1 000FAD                            _TXREG2 000F73  
               spi_data@data_read 0043                  ??_high_beams_off 0042  
                          clear_0 06A8                            isa$std 000001  
                    __pdataCOMRAM 0021                  __end_of_spi_data 05E6  
                    ?_uart_wr_str 0043                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                      __accesstop 0060           __end_of__initialization 06AE  
      ??_rx1_overrun_detect_reset 0042                   ?_debug_leds_off 003C  
                   ___rparam_used 000001                    __pcstackCOMRAM 003C  
                    __pidataBANK0 05E6                         ?_UART_ISR 003C  
                      __pnvCOMRAM 004D                        ??_UART_ISR 003C  
                         i2u56_40 0028                           i2u56_41 0024  
                         i2u57_40 0040                           i2u57_41 003C  
                         i2u58_40 005A                           i2u58_41 0056  
                         _SPBRGH1 000FB0                           _SPBRGH2 000F76  
                         _SSP1ADD 000FC8                           _SSP1BUF 000FC9  
                    _classic_ctrl 0001                   _debouncing_flag 003B  
                         __Hparam 0000                           __Lparam 0000  
                _rx_str_interrupt 004D                         ?_spi_data 0042  
                         __pcinit 0662                           __ramtop 1000  
                         __ptext0 00E2                           __ptext1 0462  
                         __ptext2 07F4                           __ptext3 079E  
                         __ptext4 06BC                           __ptext5 06F0  
                         __ptext6 0524                           __ptext7 07BC  
                         __ptext8 074E                           __ptext9 0720  
               __end_of_gpio_init 074E                           _rx_char 001D  
           __end_of_high_beams_on 0776              end_of_initialization 06AE  
                _shoulder_buttons 000E  __end_of_rx1_overrun_detect_reset 07D8  
                   __Lmediumconst 0000                 __end_of_uart_init 06F0  
                      ??_spi_data 0043                           postdec1 000FE5  
                         postinc0 000FEE                 ??_spi_master_init 0042  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                ??_debug_leds_off 0042                       _CM1CON0bits 000F79  
                     _CM2CON0bits 000F78                     __pidataCOMRAM 07D8  
             start_initialization 0662                       __end_of_tx1 07BC  
                     __end_of_tx2 080A                     _instructions1 00B7  
                   _instructions2 0090                     _instructions3 0060  
                     __pdataBANK0 0060                       _act_buttons 0018  
       ?_rx1_overrun_detect_reset 003C                       __pbssCOMRAM 0001  
              _wii_classic_packet 0031                         __pintcode 0008  
                       _gpio_init 0720                   _spi_master_init 06F0  
                        _LATAbits 000F89                          _LATBbits 000F8A  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _UART_ISR 0008  
                       _uart_init 06BC                     ??_uart_wr_str 0045  
                      ?_gpio_init 003C                      _recording_on 001C  
                       copy_data0 0676                         copy_data1 0696  
                     _aux_buttons 0008                          __Hrparam 0000  
                        __Lrparam 0000                        ?_uart_init 003C  
                  _high_beams_off 0776        _demuxed_controller_signals 001E  
         __end_of_spi_master_init 0720                          __ptext10 0776  
                        __ptext11 080A                      _SSP1CON1bits 000FC6  
             __end_of_uart_wr_str 0524                          isa$xinst 000000  
                        _spi_data 0524                          int$flags 004F  
          __end_of_high_beams_off 079E                      _SSP1STATbits 000FC7  
                        tx1@data1 0042                          tx2@data2 0042  
                      _INTCONbits 000FF2                       ??_gpio_init 0043  
                   _high_beams_on 074E                          intlevel2 0000  
                      _RCSTA1bits 000FAB                        _RCSTA2bits 000F71  
                     ??_uart_init 0042                   ?_high_beams_off 003C  
                     _uart_wr_str 0462                  ?_spi_master_init 003C  
                  ?_high_beams_on 003C  
